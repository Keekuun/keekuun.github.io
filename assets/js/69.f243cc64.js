(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{610:function(s,n,a){s.exports=a.p+"assets/img/npm-install.d1827d1e.png"},839:function(s,n,a){"use strict";a.r(n);var e=a(2),t=Object(e.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("ol",[n("li",[n("p",[n("code",[s._v("npm install")]),s._v("执行后，会检查并获取npm配置，优先级为：")]),s._v(" "),n("p",[s._v("项目级别的"),n("code",[s._v(".npmrc")]),s._v("文件 > 用户级别的"),n("code",[s._v(".npmrc")]),s._v("文件 > 全局的"),n("code",[s._v(".npmrc")]),s._v("文件 > npm内置的"),n("code",[s._v(".npmrc")]),s._v("文件")])])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看 npm 配置")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" config "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看 npm 安装的日志")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--timing")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--loglevel")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("verbose\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看 yarn 安装的日志")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("yarn")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--verbose")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看 pnpm 安装的日志")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# What level of logs to report. Any logs at or higher than the given level will be shown. Levels (lowest to highest):")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    debug, info, warn, error. ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    Or use")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#    "--silent" to turn off all logging.')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("pnpm")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--loglevel")]),s._v(" info\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("ol",{attrs:{start:"2"}},[n("li",[s._v("检查项目中是否有"),n("code",[s._v("package-lock.json")]),s._v("文件。")])]),s._v(" "),n("p",[s._v("从npm 5.x开始，执行"),n("code",[s._v("npm install")]),s._v("时会自动生成一个 "),n("code",[s._v("package-lock.json")]),s._v(" 文件。")]),s._v(" "),n("p",[n("code",[s._v("package-lock.json")]),s._v(" 文件精确描述了"),n("code",[s._v("node_modules")]),s._v(" 目录下所有的包的树状依赖结构，每个包的版本号都是完全精确的。")]),s._v(" "),n("p",[s._v("因此npm会先检查项目中是否有 "),n("code",[s._v("package-lock.json")]),s._v(" 文件，分为两种情况：")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("如果有，检查"),n("code",[s._v("package-lock.json")]),s._v("和"),n("code",[s._v("package.json")]),s._v("中声明的依赖是否一致")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("一致：直接使用 "),n("code",[s._v("package-lock.json")]),s._v(" 中声明的依赖，从缓存或者网络中加载依赖")])]),s._v(" "),n("li",[n("p",[s._v("不一致：各个版本的npm处理方式如上图")])])])]),s._v(" "),n("li",[n("p",[s._v("如果没有，根据"),n("code",[s._v("package.json")]),s._v("递归构建依赖树，然后根据依赖树下载完整的依赖资源，在下载时会检查是否有相关的资源缓存")]),s._v(" "),n("ul",[n("li",[s._v("存在：将缓存资源解压到 "),n("code",[s._v("node_modules")]),s._v(" 中")]),s._v(" "),n("li",[s._v("不存在：从远程仓库下载资源包，并校验完整性，并添加到缓存，同时解压到 "),n("code",[s._v("node_modules")]),s._v(" 中")])])])]),s._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[s._v("最终将下载资源包，存放在缓存目录中；解压资源包到当前项目的"),n("code",[s._v("node_modules")]),s._v("目录；并生成 "),n("code",[s._v("package-lock.json")]),s._v(" 文件。")])]),s._v(" "),n("p",[s._v("构建依赖树时，不管是直接依赖还是子依赖，都会按照"),n("strong",[s._v("扁平化")]),s._v("的原则，优先将其放置在 "),n("code",[s._v("node_modules")]),s._v(" 根目录中(最新的npm规范),\n在这个过程中，如果遇到相同的模块，会检查已放置在依赖树中的模块是否符合新模块的版本范围，如果符合，则跳过，不符合，则在当前模块的 "),n("code",[s._v("node_modules")]),s._v("\n下放置新模块。")]),s._v(" "),n("p",[n("strong",[s._v("扁平化")])]),s._v(" "),n("blockquote",[n("p",[s._v("下载的依赖在项目的"),n("code",[s._v("node_modules")]),s._v("目录放置的排序规则："),n("code",[s._v(".bin")]),s._v(" ---\x3e "),n("code",[s._v("@系列")]),s._v(" ---\x3e "),n("strong",[s._v("首字母排序abcd")]),s._v("等，")])]),s._v(" "),n("blockquote",[n("p",[s._v("使用的算法是"),n("strong",[s._v("广度优先遍历")]),s._v("，在遍历依赖树时，npm会首先处理项目根目录下的依赖，然后逐层处理每个依赖包的依赖，直到所有依赖都被处理完毕。")])]),s._v(" "),n("ol",{attrs:{start:"4"}},[n("li",[s._v("在执行 "),n("code",[s._v("npm install")]),s._v(" 或 "),n("code",[s._v("npm update")]),s._v(" 命令下载依赖后，除了将依赖包安装在 "),n("code",[s._v("node_modules")]),s._v(" 目录下外，还会在本地的缓存目录缓存一份。")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("// 获取缓存位置\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" config get cache\n\n// 清除缓存\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" cache clean "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--force")]),s._v("\n\n// 删除全局安装包\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" uninstall "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-g")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("package"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[n("img",{attrs:{src:a(610),alt:""}})])])}),[],!1,null,null,null);n.default=t.exports}}]);