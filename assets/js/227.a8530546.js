(window.webpackJsonp=window.webpackJsonp||[]).push([[227],{935:function(t,e,a){"use strict";a.r(e);var s=a(2),r=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"_1-简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-简介"}},[t._v("🌙")]),t._v(" 1.简介")]),t._v(" "),e("p",[t._v("Redux是react状态管理工具， 还有如Flux、Reflux、Mobx 等其他状态管理库可供选择")]),t._v(" "),e("h1",{attrs:{id:"_2-store"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-store"}},[t._v("🌙")]),t._v(" 2.Store")]),t._v(" "),e("p",[e("strong",[t._v("首先区分"),e("code",[t._v("state")]),t._v("与"),e("code",[t._v("store")])]),t._v(":")]),t._v(" "),e("p",[e("code",[t._v("state")]),t._v(" 是应用的状态，一般本质上是一个普通对象")]),t._v(" "),e("p",[e("code",[t._v("store")]),t._v(" 是应用状态 state 的管理者，包含下列四个函数：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("getState()")]),t._v(" # 获取整个 "),e("code",[t._v("state")])]),t._v(" "),e("li",[e("code",[t._v("dispatch(action)")]),t._v(" # ※ 触发 "),e("code",[t._v("state")]),t._v(" 改变的【唯一途径】※")]),t._v(" "),e("li",[e("code",[t._v("subscribe(listener)")]),t._v(" # 您可以理解成是 "),e("code",[t._v("DOM")]),t._v(" 中的 "),e("code",[t._v("addEventListener")])]),t._v(" "),e("li",[e("code",[t._v("replaceReducer(nextReducer)")]),t._v(" # 一般在 Webpack Code-Splitting 按需加载的时候用")])]),t._v(" "),e("p",[e("strong",[t._v("二者的关系是："),e("code",[t._v("state = store.getState()")])])]),t._v(" "),e("p",[t._v("Redux 规定，一个应用只应有一个"),e("strong",[t._v("单一的 store")]),t._v("，其管理着唯一的应用状态 state\nRedux 还规定，不能直接修改应用的状态 state，也就是说，下面的行为是不允许的：")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" state "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" store"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getState")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nstate"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("counter "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("counter "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 禁止在业务逻辑中直接修改 state")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[e("strong",[t._v("若要改变 state，必须 dispatch 一个 action，这是修改应用状态的不二法门")])]),t._v(" "),e("p",[e("strong",[t._v("action 只是一个包含 type 属性的普通对象即可")]),t._v("。例如 "),e("code",[t._v("{ type: 'INCREMENT' }")])]),t._v(" "),e("p",[t._v("上面提到，"),e("code",[t._v("state")]),t._v(" 是通过 "),e("code",[t._v("store.getState()")]),t._v(" 获取，那么 store 又是怎么来的呢？\n想生成一个 "),e("code",[t._v("store")]),t._v("，我们需要调用 Redux 的 "),e("code",[t._v("createStore")]),t._v("：")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" createStore "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'redux'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// store 是靠传入 reducer 生成的哦！")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" store "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createStore")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reducer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" initialState"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("reducer 是一个 函数，负责更新并返回一个新的 state")]),t._v(",而 initialState 主要用于前后端同构的数据同步（详情请关注 React 服务端渲染）")]),t._v(" "),e("h1",{attrs:{id:"_3-action"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-action"}},[t._v("🌙")]),t._v(" 3.Action")]),t._v(" "),e("p",[e("strong",[t._v("action（动作）实质上是包含 type 属性的普通对象")]),t._v("，这个 "),e("code",[t._v("type")]),t._v(" 是我们实现用户行为追踪的关键\n例如，增加一个待办事项 的 "),e("code",[t._v("action")]),t._v(" 可能是像下面一样：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("{\n  type: 'ADD_TODO',\n  payload: {\n    id: 1,\n    content: '待办事项1',\n    completed: false\n  }\n}\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[t._v("刨根问底，"),e("code",[t._v("action")]),t._v(" 是谁生成的呢？ —— "),e("code",[t._v("Action Creator")])]),t._v(" "),e("p",[t._v("顾名思义，"),e("code",[t._v("Action Creator")]),t._v(" 是 action 的创造者，本质上就是一个"),e("strong",[t._v("函数")]),t._v("，返回值是一个 "),e("code",[t._v("action")]),t._v("（"),e("strong",[t._v("对象")]),t._v("）\n例如下面就是一个 “新增一个待办事项” 的 "),e("code",[t._v("Action Creator")]),t._v("：")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" id "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("addTodo")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("content")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ADD_TODO'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("payload")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("content")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" content"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 待办事项内容")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("completed")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否完成的标识")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("h1",{attrs:{id:"_4-reducer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-reducer"}},[t._v("🌙")]),t._v(" 4.Reducer")]),t._v(" "),e("p",[e("strong",[t._v("reducer 的实质是一个函数")]),t._v("，根据 "),e("code",[t._v("action.type")]),t._v(" 来更新 "),e("code",[t._v("state")]),t._v(" 并返回 "),e("code",[t._v("nextState")]),t._v(",最后会用 "),e("code",[t._v("reducer")]),t._v(" 的返回值 "),e("code",[t._v("nextState")]),t._v(" 完全替换掉原来的 "),e("code",[t._v("state")])]),t._v(" "),e("blockquote",[e("p",[t._v("注意：上面的这个 “更新” 并不是指 "),e("code",[t._v("reducer")]),t._v(" 可以直接对 "),e("code",[t._v("state")]),t._v(" 进行修改\nRedux 规定，须先复制一份 "),e("code",[t._v("state")]),t._v("，在副本 "),e("code",[t._v("nextState")]),t._v(" 上进行修改操作\n例如，可以使用 lodash 的 "),e("code",[t._v("cloneDeep")]),t._v("，也可以使用 "),e("code",[t._v("Object.assign / map / filter/ ...")]),t._v(" 等返回副本的函数")])]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" initState "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("counter")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("todos")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("reducer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" initState"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" action")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ADD_TODO'")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nextState "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cloneDeep")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用到了 lodash 的深克隆")]),t._v("\n      nextState"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("todos"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("payload"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" nextState\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 由于 nextState 会把原 state 整个替换掉")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 若无修改，必须返回原 state（否则就是 undefined）")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br")])]),e("blockquote",[e("p",[t._v("通俗点讲，就是 "),e("code",[t._v("reducer")]),t._v(" 返回啥，"),e("code",[t._v("state")]),t._v(" 就被替换成啥")])]),t._v(" "),e("h1",{attrs:{id:"_5-redux-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-redux-api"}},[t._v("🌙")]),t._v(" 5.Redux API")]),t._v(" "),e("blockquote",[e("p",[e("a",{attrs:{href:"https://github.com/kenberkeley/redux-simple-tutorial/blob/master/redux-advanced-tutorial.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redux API 总览"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/kenberkeley/redux-simple-tutorial/blob/master/middleware-onion-model.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("中间件的洋葱模型"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("Redux 有五个 API，分别是：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("createStore(reducer, [initialState])")]),t._v(" 创建store")]),t._v(" "),e("li",[e("code",[t._v("combineReducers(reducers)")]),t._v(" 管理多个reducer")]),t._v(" "),e("li",[e("code",[t._v("applyMiddleware(...middlewares)")]),t._v(" 管理中间件，如"),e("code",[t._v("redux-saga")])]),t._v(" "),e("li",[e("code",[t._v("bindActionCreators(actionCreators, dispatch)")]),t._v("实现自动 "),e("code",[t._v("dispatch")])]),t._v(" "),e("li",[e("code",[t._v("compose(...functions)")]),t._v("高阶函数")])]),t._v(" "),e("p",[e("code",[t._v("createStore")]),t._v(" 生成的 "),e("code",[t._v("store")]),t._v(" 有四个 API，分别是：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("getState()")])]),t._v(" "),e("li",[e("code",[t._v("dispatch(action)")])]),t._v(" "),e("li",[e("code",[t._v("subscribe(listener)")])]),t._v(" "),e("li",[e("code",[t._v("replaceReducer(nextReducer)")])])]),t._v(" "),e("h1",{attrs:{id:"小结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("🌙")]),t._v(" 小结")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("store")]),t._v(" 由 Redux 的 "),e("code",[t._v("createStore(reducer)")]),t._v(" 生成")]),t._v(" "),e("li",[e("code",[t._v("state")]),t._v(" 通过 "),e("code",[t._v("store.getState()")]),t._v(" 获取，本质上一般是一个存储着整个应用状态的对象")]),t._v(" "),e("li",[e("code",[t._v("action")]),t._v(" 本质上是一个包含 "),e("code",[t._v("type")]),t._v(" 属性的普通对象，由 "),e("code",[t._v("Action Creator")]),t._v(" (函数) 产生")]),t._v(" "),e("li",[t._v("改变 "),e("code",[t._v("state")]),t._v(" 必须 "),e("code",[t._v("dispatch")]),t._v(" 一个 "),e("code",[t._v("action")])]),t._v(" "),e("li",[e("code",[t._v("reducer")]),t._v(" 本质上是根据 "),e("code",[t._v("action.type")]),t._v(" 来更新 "),e("code",[t._v("state")]),t._v(" 并返回 "),e("code",[t._v("nextState")]),t._v(" 的函数")]),t._v(" "),e("li",[e("code",[t._v("reducer")]),t._v(" 必须返回值，否则 "),e("code",[t._v("nextState")]),t._v(" 即为 "),e("code",[t._v("undefined")])])]),t._v(" "),e("p",[t._v("实际上，"),e("code",[t._v("state")]),t._v(" 就是所有 "),e("code",[t._v("reducer")]),t._v(" 返回值的汇总: "),e("code",[t._v("state + action = new state")])]),t._v(" "),e("blockquote",[e("p",[t._v("Action Creator => action => store.dispatch(action) => reducer(state, action) => 原 state state = nextState")])]),t._v(" "),e("p",[e("strong",[t._v("Redux 与传统后端 MVC 的对照")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Redux")]),t._v(" "),e("th",[t._v("传统后端 MVC")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("store")])]),t._v(" "),e("td",[t._v("数据库实例")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("state")])]),t._v(" "),e("td",[t._v("数据库中存储的数据")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("dispatch(action)")])]),t._v(" "),e("td",[t._v("用户发起请求")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("action: { type, payload }")])]),t._v(" "),e("td",[e("code",[t._v("type")]),t._v(" 表示请求的 URL，"),e("code",[t._v("payload")]),t._v(" 表示请求的数据")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("reducer")])]),t._v(" "),e("td",[t._v("路由 + 控制器（handler）")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("reducer")]),t._v(" 中的 "),e("code",[t._v("switch-case")]),t._v(" 分支")]),t._v(" "),e("td",[t._v("路由，根据 "),e("code",[t._v("action.type")]),t._v(" 路由到对应的控制器")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("reducer")]),t._v(" 内部对 "),e("code",[t._v("state")]),t._v(" 的处理")]),t._v(" "),e("td",[t._v("控制器对数据库进行增删改操作")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("reducer")]),t._v(" 返回 "),e("code",[t._v("nextState")])]),t._v(" "),e("td",[t._v("将修改后的记录写回数据库")])])])]),t._v(" "),e("hr"),t._v(" "),e("p",[e("strong",[t._v("以下为后续学习补充")]),t._v("：")]),t._v(" "),e("h1",{attrs:{id:"react-redux-redux-react三者关系"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-redux-redux-react三者关系"}},[t._v("🌙")]),t._v(" React-Redux,Redux,React三者关系")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Redux： 首先 Redux 是一个应用状态管理js库，它本身和 React 是没有关系的，换句话说，Redux 可以应用于其他框架构建的前端应用，甚至也可以应用于 Vue 中。")])]),t._v(" "),e("li",[e("p",[t._v("React-Redux：React-Redux 是连接 React 应用和 Redux 状态管理的桥梁。React-redux 主要专注两件事，一是如何向 React 应用中注入 redux 中的 Store ，二是如何根据 Store 的改变，把消息派发给应用中需要状态的每一个组件。")])]),t._v(" "),e("li",[e("p",[t._v("React：这个就不必多说了。")])])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/83eaf84d71b04b94b7b7e754a6778cd1~tplv-k3u1fbpfcp-watermark.awebp",alt:""}})]),t._v(" "),e("h1",{attrs:{id:"redux设计思想"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redux设计思想"}},[t._v("🌙")]),t._v(" redux设计思想：")]),t._v(" "),e("h2",{attrs:{id:"redux三大原则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redux三大原则"}},[t._v("🌙")]),t._v(" redux三大原则")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("1."),e("strong",[t._v("单向数据流")]),t._v("：整个 redux ，数据流向都是单向的\n"),e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d3775935f59d435fa6326dbcef90519e~tplv-k3u1fbpfcp-watermark.awebp",alt:""}})])]),t._v(" "),e("li",[e("p",[t._v("2."),e("strong",[t._v("state 只读")]),t._v("：在 Redux 中不能通过直接改变 state ，来让状态发生变化，如果想要改变 state ，那就必须触发一次 action ，通过 action 执行每个 reducer 。")])]),t._v(" "),e("li",[e("p",[t._v("3."),e("strong",[t._v("纯函数执行")]),t._v("：每一个 reducer 都是一个纯函数，里面不要执行任何副作用，返回的值作为新的 state ，state 改变会触发 store 中的 subscribe 。")])])]),t._v(" "),e("h2",{attrs:{id:"发布订阅思想"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#发布订阅思想"}},[t._v("🌙")]),t._v(" 发布订阅思想")]),t._v(" "),e("p",[t._v("redux 可以作为发布订阅模式的一个具体实现。redux 都会创建一个 store ，里面保存了状态信息，改变 store 的方法 dispatch ，以及订阅 store 变化的方法 subscribe 。")]),t._v(" "),e("h2",{attrs:{id:"中间件思想"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#中间件思想"}},[t._v("🌙")]),t._v(" 中间件思想")]),t._v(" "),e("p",[t._v("redux 应用了前端领域为数不多的中间件 compose ，那么 redux 的中间件是用来做什么的？ 答案只有一个： 那就是"),e("strong",[t._v("强化 dispatch")]),t._v(" ， Redux 提供了中间件机制，使用者可以根据需要来强化 dispatch 函数，传统的 dispatch 是不支持异步的，但是可以针对 Redux 做强化，于是有了 redux-thunk，redux-actions 等中间件，包括 dvajs 中，也写了一个 redux 支持 promise 的中间件。")]),t._v(" "),e("p",[t._v("compose实现：")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("compose")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" args"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduceRight")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("acc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("acc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("funcs 为中间件组成的数组，compose 通过数组的 reduce 方法，实现执行每一个中间件，强化 dispatch 。")]),t._v(" "),e("h2",{attrs:{id:"核心api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#核心api"}},[t._v("🌙")]),t._v(" 核心api")]),t._v(" "),e("h3",{attrs:{id:"_1-createstore"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-createstore"}},[t._v("🌙")]),t._v(" 1.createStore")]),t._v(" "),e("p",[t._v("createStore redux中通过 createStore 可以创建一个 Store ，使用者可以将这个 Store 保存传递给 React 应用，具体怎么传递那就是 React-Redux 做的事了。首先看一下 createStore 的使用：")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Store "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createStore")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rootReducer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("initialState"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("middleware"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("ul",[e("li",[t._v("参数一 reducers ： redux 的 reducer ，如果有多个那么可以调用 combineReducers 合并。")]),t._v(" "),e("li",[t._v("参数二 initialState ：初始化的 state 。")]),t._v(" "),e("li",[t._v("参数三 middleware ：如果有中间件，那么存放 redux 中间件。")])]),t._v(" "),e("h3",{attrs:{id:"combinereducers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#combinereducers"}},[t._v("🌙")]),t._v(" combineReducers")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 将 number 和 PersonalInfo 两个reducer合并   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" rootReducer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("combineReducers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("number")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("numberReducer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("info")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("InfoReducer "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[t._v("正常状态可以会有多个 reducer ，combineReducers 可以合并多个reducer。")]),t._v(" "),e("h3",{attrs:{id:"applymiddleware"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#applymiddleware"}},[t._v("🌙")]),t._v(" applyMiddleware")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" middleware "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("applyMiddleware")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("logMiddleware"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("applyMiddleware 用于注册中间价，支持多个参数，每一个参数都是一个中间件。每次触发 action ，中间件依次执行。")]),t._v(" "),e("blockquote",[e("p",[e("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/09/redux_tutorial_part_one_basic_usages.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redux 入门教程（一）：基本用法"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/09/redux_tutorial_part_two_async_operations.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redux 入门教程（二）：中间件与异步操作"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://redux-saga-in-chinese.js.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("中文官网：redux-saga"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.jianshu.com/p/6f96bdaaea22",target:"_blank",rel:"noopener noreferrer"}},[t._v("简书：Redux-saga"),e("OutboundLink")],1)])]),t._v(" "),e("iframe",{attrs:{src:"http://cn.redux.js.org/",width:"100%",height:"666px"}}),t._v("\n[Redux 中文文档](https://cn.redux.js.org/)\n")])}),[],!1,null,null,null);e.default=r.exports}}]);