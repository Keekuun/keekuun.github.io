(window.webpackJsonp=window.webpackJsonp||[]).push([[137],{837:function(t,n,e){"use strict";e.r(n);var s=e(2),r=Object(s.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"nodejs之net模块学习笔记"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nodejs之net模块学习笔记"}},[t._v("🌙")]),t._v(" NodeJS之net模块学习笔记")]),t._v(" "),n("h2",{attrs:{id:"_1-net-网络-模块简介"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-net-网络-模块简介"}},[t._v("🌙")]),t._v(" 1.net（网络）模块简介")]),t._v(" "),n("p",[n("code",[t._v("net")]),t._v(" 模块用于创建基于流（stream-based）的 TCP 或 "),n("a",{attrs:{href:"http://nodejs.cn/s/rAdYjf",target:"_blank",rel:"noopener noreferrer"}},[t._v("IPC"),n("OutboundLink")],1),t._v(" 的服务器（"),n("a",{attrs:{href:"http://nodejs.cn/s/e8cikS",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("net.createServer()")]),n("OutboundLink")],1),t._v("）与客户端（"),n("a",{attrs:{href:"http://nodejs.cn/s/RTNxdX",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("net.createConnection()")]),n("OutboundLink")],1),t._v("）。")]),t._v(" "),n("p",[t._v("使用方法如下:")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" net "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'net'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("h2",{attrs:{id:"_2-net-server-类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-net-server-类"}},[t._v("🌙")]),t._v(" 2.net.Server 类")]),t._v(" "),n("ul",[n("li",[t._v("继承自: "),n("a",{attrs:{href:"http://nodejs.cn/s/pGAddE",target:"_blank",rel:"noopener noreferrer"}},[t._v("EventEmitter"),n("OutboundLink")],1)])]),t._v(" "),n("p",[t._v("此类用于创建 TCP 或 "),n("a",{attrs:{href:"http://nodejs.cn/s/rAdYjf",target:"_blank",rel:"noopener noreferrer"}},[t._v("IPC"),n("OutboundLink")],1),t._v(" 服务器。")]),t._v(" "),n("h3",{attrs:{id:"_2-1-new-net-server-options-connectionlistener-构造函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-new-net-server-options-connectionlistener-构造函数"}},[t._v("🌙")]),t._v(" 2.1 "),n("code",[t._v("new net.Server([options][, connectionListener])")]),t._v("构造函数")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("options")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object"),n("OutboundLink")],1),t._v(" 参见 "),n("a",{attrs:{href:"http://nodejs.cn/s/e8cikS",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("net.createServer([options\\][, connectionListener])")]),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("connectionListener")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[t._v("function"),n("OutboundLink")],1),t._v(" 自动设置为 "),n("a",{attrs:{href:"http://nodejs.cn/s/4qU2j9",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("'connection'")]),n("OutboundLink")],1),t._v(" 事件的监听器。")]),t._v(" "),n("li",[t._v("返回: "),n("a",{attrs:{href:"http://nodejs.cn/s/gBYjux",target:"_blank",rel:"noopener noreferrer"}},[t._v("net.Server"),n("OutboundLink")],1)])]),t._v(" "),n("p",[n("code",[t._v("net.Server")]),t._v(" 是一个 "),n("a",{attrs:{href:"http://nodejs.cn/s/pGAddE",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("EventEmitter")]),n("OutboundLink")],1),t._v("，实现了以下事件:")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("事件名称")]),t._v(" "),n("th",[t._v("说明")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[n("code",[t._v("close")])]),t._v(" "),n("td",[t._v("当 server 关闭的时候触发。 如果有连接存在，直到所有的连接结束才会触发这个事件。")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("connection")])]),t._v(" "),n("td",[t._v("当一个新的连接建立的时候触发。 "),n("code",[t._v("socket")]),t._v(" 是一个 "),n("code",[t._v("net.Socket")]),t._v(" 实例。")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("error")])]),t._v(" "),n("td",[t._v("当错误出现的时候触发。 不同于 "),n("a",{attrs:{href:"http://nodejs.cn/s/wsJ1o1",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("net.Socket")]),n("OutboundLink")],1),t._v("，"),n("a",{attrs:{href:"http://nodejs.cn/s/3c6jjk",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("'close'")]),n("OutboundLink")],1),t._v(" 事件不会在这个事件触发后继续触发，除非 "),n("a",{attrs:{href:"http://nodejs.cn/s/zZ874N",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("server.close()")]),n("OutboundLink")],1),t._v(" 是手动调用。 参见 "),n("a",{attrs:{href:"http://nodejs.cn/s/xGksiu",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("server.listen()")]),n("OutboundLink")],1),t._v(" 中的例子。")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("listening")])]),t._v(" "),n("td",[t._v("当调用 "),n("a",{attrs:{href:"http://nodejs.cn/s/xGksiu",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("server.listen()")]),n("OutboundLink")],1),t._v(" 绑定服务器之后触发。")])])])]),t._v(" "),n("h3",{attrs:{id:"_2-2-server-listen"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-server-listen"}},[t._v("🌙")]),t._v(" 2.2 "),n("code",[t._v("server.listen()")])]),t._v(" "),n("p",[t._v("启动一个服务器来监听连接。 "),n("code",[t._v("net.Server")]),t._v(" 可以是 TCP 或 "),n("a",{attrs:{href:"http://nodejs.cn/s/rAdYjf",target:"_blank",rel:"noopener noreferrer"}},[t._v("IPC"),n("OutboundLink")],1),t._v(" 服务器，具体取决于它监听的内容。")]),t._v(" "),n("p",[t._v("可能的参数：")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("server.listen(handle[, backlog][, callback])")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("handle")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t._v("object"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("code",[t._v("backlog")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t._v("number"),n("OutboundLink")],1),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/xGksiu",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("server.listen()")]),n("OutboundLink")],1),t._v(" 函数的通用参数。")]),t._v(" "),n("li",[n("code",[t._v("callback")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[t._v("funtion"),n("OutboundLink")],1)]),t._v(" "),n("li",[t._v("返回: "),n("a",{attrs:{href:"http://nodejs.cn/s/gBYjux",target:"_blank",rel:"noopener noreferrer"}},[t._v("net.server"),n("OutboundLink")],1)])])]),t._v(" "),n("li",[n("code",[t._v("server.listen(options[, callback])")]),t._v("option参数：\n"),n("ul",[n("li",[n("code",[t._v("port")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t._v("number"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("code",[t._v("host")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t._v("host"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("code",[t._v("path")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t._v("string"),n("OutboundLink")],1),t._v(" 如果指定了 "),n("code",[t._v("port")]),t._v(" 参数则会被忽略。查看"),n("a",{attrs:{href:"http://nodejs.cn/s/tNVQV4",target:"_blank",rel:"noopener noreferrer"}},[t._v("识别 IPC 连接的路径。"),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("backlog")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t._v("number"),n("OutboundLink")],1),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/xGksiu",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("server.listen()")]),n("OutboundLink")],1),t._v(" 函数的通用参数。")]),t._v(" "),n("li",[n("code",[t._v("exclusive")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t._v("boolean"),n("OutboundLink")],1),t._v(" "),n("strong",[t._v("默认值:")]),t._v(" "),n("code",[t._v("false")]),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("readableAll")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t._v("boolean"),n("OutboundLink")],1),t._v(" 对于 IPC 服务器，使管道对所有用户都可读。"),n("strong",[t._v("默认值:")]),t._v(" "),n("code",[t._v("false")]),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("writableAll")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t._v("boolean"),n("OutboundLink")],1),t._v(" 对于 IPC 服务器，使管道对所有用户都可写。"),n("strong",[t._v("默认值:")]),t._v(" "),n("code",[t._v("false")]),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("ipv6Only")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t._v("boolean"),n("OutboundLink")],1),t._v(" 对于 TCP 服务器，将 "),n("code",[t._v("ipv6Only")]),t._v(" 设置为 "),n("code",[t._v("true")]),t._v(" 将会禁用双栈支持，即绑定到主机 "),n("code",[t._v("::")]),t._v(" 不会使 "),n("code",[t._v("0.0.0.0")]),t._v(" 绑定。"),n("strong",[t._v("默认值:")]),t._v(" "),n("code",[t._v("false")]),t._v("。")])])]),t._v(" "),n("li",[n("code",[t._v("server.listen(path[, backlog][, callback])")]),t._v("用于 "),n("a",{attrs:{href:"http://nodejs.cn/s/rAdYjf",target:"_blank",rel:"noopener noreferrer"}},[t._v("IPC"),n("OutboundLink")],1),t._v(" 服务器。\n"),n("ul",[n("li",[n("code",[t._v("path")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t._v("string"),n("OutboundLink")],1),t._v(" 如果指定了 "),n("code",[t._v("port")]),t._v(" 参数则会被忽略。查看"),n("a",{attrs:{href:"http://nodejs.cn/s/tNVQV4",target:"_blank",rel:"noopener noreferrer"}},[t._v("识别 IPC 连接的路径。"),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("backlog")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t._v("number"),n("OutboundLink")],1),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/xGksiu",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("server.listen()")]),n("OutboundLink")],1),t._v(" 函数的通用参数。")])])]),t._v(" "),n("li",[n("code",[t._v("server.listen([port[,host[,backlog]]][,callback])")]),t._v(" 用于 TCP 服务器。最常用\n"),n("ul",[n("li",[n("code",[t._v("port")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t._v("number"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("code",[t._v("host")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t._v("host"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("code",[t._v("backlog")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t._v("number"),n("OutboundLink")],1),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/xGksiu",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("server.listen()")]),n("OutboundLink")],1),t._v(" 函数的通用参数。")])])])]),t._v(" "),n("p",[t._v("这个函数是异步的。当服务器开始监听时，会触发 "),n("a",{attrs:{href:"http://nodejs.cn/s/gimdsR",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("'listening'")]),n("OutboundLink")],1),t._v(" 事件。 最后一个参数 "),n("code",[t._v("callback")]),t._v(" 将被添加为 "),n("a",{attrs:{href:"http://nodejs.cn/s/gimdsR",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("'listening'")]),n("OutboundLink")],1),t._v(" 事件的监听器。")]),t._v(" "),n("p",[t._v("所有的 "),n("code",[t._v("listen()")]),t._v(" 方法都可以使用一个 "),n("code",[t._v("backlog")]),t._v(" 参数来指定待连接队列的最大长度。 此参数的默认值是 511 (不是512）。")]),t._v(" "),n("p",[t._v("所有的 "),n("a",{attrs:{href:"http://nodejs.cn/s/wsJ1o1",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("net.Socket")]),n("OutboundLink")],1),t._v(" 都被设置为 "),n("code",[t._v("SO_REUSEADDR")]),t._v(" (详见 "),n("a",{attrs:{href:"http://nodejs.cn/s/6qFPUH",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("socket(7)")]),n("OutboundLink")],1),t._v(")。")]),t._v(" "),n("p",[t._v("当且仅当上次调用 "),n("code",[t._v("server.listen()")]),t._v(" 发生错误或已经调用 "),n("code",[t._v("server.close()")]),t._v(" 时，才能再次调用 "),n("code",[t._v("server.listen()")]),t._v(" 方法。否则将抛出 "),n("code",[t._v("ERR_SERVER_ALREADY_LISTEN")]),t._v(" 错误。")]),t._v(" "),n("p",[t._v("监听时最常见的错误之一是 "),n("code",[t._v("EADDRINUSE")]),t._v("。 这是因为另一个服务器已正在监听请求的 "),n("code",[t._v("port")]),t._v("/"),n("code",[t._v("path")]),t._v("/"),n("code",[t._v("handle")]),t._v("。 处理此问题的一种方法是在一段时间后重试：")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("server"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("code "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'EADDRINUSE'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'地址正被使用，重试中...'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      server"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      server"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PORT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HOST")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br")])]),n("h3",{attrs:{id:"_2-3-server-address"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-server-address"}},[t._v("🌙")]),t._v(" 2.3 "),n("code",[t._v("server.address()")])]),t._v(" "),n("ul",[n("li",[t._v("返回: "),n("a",{attrs:{href:"http://nodejs.cn/s/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t._v("object"),n("OutboundLink")],1),t._v(" | "),n("a",{attrs:{href:"http://nodejs.cn/s/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t._v("string"),n("OutboundLink")],1),t._v(" | "),n("a",{attrs:{href:"http://nodejs.cn/s/334hvC",target:"_blank",rel:"noopener noreferrer"}},[t._v("null"),n("OutboundLink")],1)])]),t._v(" "),n("p",[t._v("如果在 IP socket 上监听，则返回操作系统报告的绑定的 "),n("code",[t._v("address")]),t._v("、地址 "),n("code",[t._v("family")]),t._v(" 名称、以及服务器 "),n("code",[t._v("port")]),t._v("（用于查找在获取操作系统分配的地址时分配的端口）："),n("code",[t._v("{ port: 12346, family: 'IPv4', address: '127.0.0.1' }")]),t._v("。")]),t._v(" "),n("p",[t._v("对于在管道或 Unix 域套接字上监听的 server，该名称将返回为字符串。")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" server "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" net"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("socket")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  socket"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'再见\\n'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理错误")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" err"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取任意未使用的端口。")]),t._v("\nserver"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'打开服务器'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" server"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("address")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br")])]),n("p",[t._v("在 "),n("code",[t._v("'listening'")]),t._v(" 事件被触发之前、或在调用 "),n("code",[t._v("server.close()")]),t._v(" 之后， "),n("code",[t._v("server.address()")]),t._v(" 返回 "),n("code",[t._v("null")]),t._v("。")]),t._v(" "),n("h3",{attrs:{id:"_2-4-server-close-callback"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-server-close-callback"}},[t._v("🌙")]),t._v(" 2.4 "),n("code",[t._v("server.close([callback])")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("callback")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[t._v("function"),n("OutboundLink")],1),t._v(" 当 server 被关闭时调用。")]),t._v(" "),n("li",[t._v("返回: "),n("a",{attrs:{href:"http://nodejs.cn/s/gBYjux",target:"_blank",rel:"noopener noreferrer"}},[t._v("net.Server"),n("OutboundLink")],1)])]),t._v(" "),n("p",[t._v("阻止 server 接受新的连接并保持现有的连接。 该函数是异步的，server 将在所有连接结束后关闭并触发 "),n("a",{attrs:{href:"http://nodejs.cn/s/3c6jjk",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("'close'")]),n("OutboundLink")],1),t._v(" 事件。 可选的 "),n("code",[t._v("callback")]),t._v(" 将在 "),n("code",[t._v("'close'")]),t._v(" 事件发生时被调用。 与 "),n("code",[t._v("'close'")]),t._v(" 事件不同的是，如果 server 在关闭时未打开，回调函数被调用时会传入一个 "),n("code",[t._v("Error")]),t._v(" 对象作为唯一参数。")]),t._v(" "),n("h2",{attrs:{id:"_3-net-socket-类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-net-socket-类"}},[t._v("🌙")]),t._v(" 3.net.Socket 类")]),t._v(" "),n("ul",[n("li",[t._v("继承自: "),n("a",{attrs:{href:"http://nodejs.cn/s/2iRabr",target:"_blank",rel:"noopener noreferrer"}},[t._v("stream.Duplex"),n("OutboundLink")],1)])]),t._v(" "),n("p",[t._v("此类是 TCP 套接字或流式 "),n("a",{attrs:{href:"http://nodejs.cn/s/rAdYjf",target:"_blank",rel:"noopener noreferrer"}},[t._v("IPC"),n("OutboundLink")],1),t._v(" 端点的抽象（在 Windows 上使用命名管道，否则使用 Unix 域套接字）。 它也是一个 "),n("a",{attrs:{href:"http://nodejs.cn/s/pGAddE",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("EventEmitter")]),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("p",[n("code",[t._v("net.Socket")]),t._v(" 可以由用户创建并且直接地与服务器进行交互。 例如，它由 "),n("a",{attrs:{href:"http://nodejs.cn/s/RTNxdX",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("net.createConnection()")]),n("OutboundLink")],1),t._v(" 返回，因此用户可以使用它与服务器进行通信。")]),t._v(" "),n("p",[t._v("它也可以由 Node.js 创建，并在收到连接时传给用户。 例如，将它传给 "),n("a",{attrs:{href:"http://nodejs.cn/s/gBYjux",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("net.Server")]),n("OutboundLink")],1),t._v(" 上触发的 "),n("a",{attrs:{href:"http://nodejs.cn/s/4qU2j9",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("'connection'")]),n("OutboundLink")],1),t._v(" 事件的监听器，因此用户可以使用它与客户端进行交互。")]),t._v(" "),n("h3",{attrs:{id:"_3-1-new-net-socket-options-构造函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-new-net-socket-options-构造函数"}},[t._v("🌙")]),t._v(" 3.1 "),n("code",[t._v("new net.Socket([options])")]),t._v("构造函数")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("options")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t._v("object"),n("OutboundLink")],1),t._v(" 可用选项有\n"),n("ul",[n("li",[n("code",[t._v("fd")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t._v("number"),n("OutboundLink")],1),t._v(" 如果指定了该参数，则使用一个给定的文件描述符包装一个已存在的 socket，否则将创建一个新的 socket。")]),t._v(" "),n("li",[n("code",[t._v("allowHalfOpen")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t._v("boolean"),n("OutboundLink")],1),t._v(" 指示是否允许半打开的 TCP 连接。详情查看 "),n("a",{attrs:{href:"http://nodejs.cn/s/e8cikS",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("net.createServer()")]),n("OutboundLink")],1),t._v(" 和 "),n("a",{attrs:{href:"http://nodejs.cn/s/Hxzmh3",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("'end'")]),n("OutboundLink")],1),t._v(" 事件。"),n("strong",[t._v("默认值:")]),t._v(" "),n("code",[t._v("false")]),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("readable")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t._v("boolean"),n("OutboundLink")],1),t._v(" 当传递了 "),n("code",[t._v("fd")]),t._v(" 时允许读取 socket，否则忽略。"),n("strong",[t._v("默认值:")]),t._v(" "),n("code",[t._v("false")]),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("writable")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t._v("boolean"),n("OutboundLink")],1),t._v(" 当传递了 "),n("code",[t._v("fd")]),t._v(" 时允许写入 socket，否则忽略。"),n("strong",[t._v("默认值:")]),t._v(" "),n("code",[t._v("false")]),t._v("。")])])]),t._v(" "),n("li",[t._v("返回: "),n("a",{attrs:{href:"http://nodejs.cn/s/wsJ1o1",target:"_blank",rel:"noopener noreferrer"}},[t._v("net.Socket"),n("OutboundLink")],1)])]),t._v(" "),n("p",[t._v("创建一个 socket 对象。 新创建的 socket 可以是 TCP socket 也可以是 "),n("a",{attrs:{href:"http://nodejs.cn/s/rAdYjf",target:"_blank",rel:"noopener noreferrer"}},[t._v("IPC"),n("OutboundLink")],1),t._v(" 端点流，取决于它连接 "),n("a",{attrs:{href:"http://nodejs.cn/s/fGCDDg",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("connect()")]),n("OutboundLink")],1),t._v(" 到什么。")]),t._v(" "),n("h3",{attrs:{id:"_3-2-socket事件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-socket事件"}},[t._v("🌙")]),t._v(" 3.2 socket事件")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("事件名称")]),t._v(" "),n("th",[t._v("描述")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[n("code",[t._v("close")])]),t._v(" "),n("td",[t._v("一旦 socket 完全关闭就发出该事件。参数 "),n("code",[t._v("had_error")]),t._v(" 是 boolean 类型，表明 socket 被关闭是否取决于传输错误。")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("connect")])]),t._v(" "),n("td",[t._v("当一个 socket 连接成功建立的时候触发该事件。 查看 "),n("a",{attrs:{href:"http://nodejs.cn/s/RTNxdX",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("net.createConnection()")]),n("OutboundLink")],1),t._v("。")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("data")])]),t._v(" "),n("td",[t._v("当接收到数据的时触发该事件。"),n("code",[t._v("data")]),t._v(" 参数是一个 "),n("code",[t._v("Buffer")]),t._v(" 或 "),n("code",[t._v("String")]),t._v("。数据编码由 "),n("a",{attrs:{href:"http://nodejs.cn/s/2Vxp3Q",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("socket.setEncoding()")]),n("OutboundLink")],1),t._v(" 设置。")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("drain")])]),t._v(" "),n("td",[t._v("当写入缓冲区变为空时触发。可以用来做上传节流。也可以查看："),n("code",[t._v("socket.write()")]),t._v(" 的返回值。")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("end")])]),t._v(" "),n("td",[t._v("当 socket 的另一端发送一个 FIN 包的时候触发，从而结束 socket 的可读端。")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("error")])]),t._v(" "),n("td",[t._v("当错误发生时触发。"),n("code",[t._v("'close'")]),t._v(" 事件也会紧接着该事件被触发。")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("lookup")])]),t._v(" "),n("td",[t._v("在找到主机之后创建连接之前触发。")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("timeout")])]),t._v(" "),n("td",[t._v("当 socket 超时的时候触发。该事件只是用来通知 socket 已经闲置。用户必须手动关闭。也可以查看："),n("a",{attrs:{href:"http://nodejs.cn/s/XC4Yyj",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("socket.setTimeout()")]),n("OutboundLink")],1),t._v("。")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("ready")])]),t._v(" "),n("td",[n("code",[t._v("socket")]),t._v("准备好使用时触发，"),n("code",[t._v("'connect'")]),t._v(" 后立即触发。")])])])]),t._v(" "),n("h3",{attrs:{id:"_3-3-socket-address"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-socket-address"}},[t._v("🌙")]),t._v(" 3.3 "),n("code",[t._v("socket.address()")])]),t._v(" "),n("ul",[n("li",[t._v("返回: "),n("a",{attrs:{href:"http://nodejs.cn/s/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t._v("object"),n("OutboundLink")],1)])]),t._v(" "),n("p",[t._v("返回操作系统报告的 socket 的 "),n("code",[t._v("address")]),t._v("、地址的 "),n("code",[t._v("family")]),t._v(" 名称、以及 "),n("code",[t._v("port")]),t._v("： "),n("code",[t._v("{ port: 12346, family: 'IPv4', address: '127.0.0.1' }")]),t._v("。")]),t._v(" "),n("h3",{attrs:{id:"_3-4-socket-connect"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-socket-connect"}},[t._v("🌙")]),t._v(" 3.4 "),n("code",[t._v("socket.connect()")])]),t._v(" "),n("p",[t._v("在给定的"),n("code",[t._v("socket")]),t._v("上启动一个连接。")]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("socket.connect(options[, connectListener])")])]),t._v(" "),n("p",[t._v("​\t对于 TCP 连接，可用的 "),n("code",[t._v("options")]),t._v(" 有：")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("port")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t._v("number"),n("OutboundLink")],1),t._v(" 必须。"),n("code",[t._v("socket")]),t._v("要连接的端口。")]),t._v(" "),n("li",[n("code",[t._v("host")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t._v("string"),n("OutboundLink")],1),t._v(" "),n("code",[t._v("socket")]),t._v("要连接的主机。"),n("strong",[t._v("默认值:")]),t._v(" "),n("code",[t._v("'localhost'")]),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("localAddress")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t._v("string"),n("OutboundLink")],1),t._v(" "),n("code",[t._v("socket")]),t._v("要连接的本地地址。")]),t._v(" "),n("li",[n("code",[t._v("localPort")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t._v("number"),n("OutboundLink")],1),t._v(" "),n("code",[t._v("socket")]),t._v("要连接的本地端口。")]),t._v(" "),n("li",[n("code",[t._v("family")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t._v("number"),n("OutboundLink")],1),t._v(" IP 栈的版本。必须为 "),n("code",[t._v("4")]),t._v("、 "),n("code",[t._v("6")]),t._v(" 或 "),n("code",[t._v("0")]),t._v("。"),n("code",[t._v("0")]),t._v(" 值表示允许 IPv4 和 IPv6 地址。"),n("strong",[t._v("默认值:")]),t._v(" "),n("code",[t._v("0")]),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("hints")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t._v("number"),n("OutboundLink")],1),t._v(" 可选的 "),n("a",{attrs:{href:"http://nodejs.cn/s/WpjMXq",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("dns.lookup()")]),t._v(" 提示"),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("lookup")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[t._v("function"),n("OutboundLink")],1),t._v(" 自定义的查找函数。"),n("strong",[t._v("默认值:")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/LJLsTL",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("dns.lookup()")]),n("OutboundLink")],1),t._v("。")])])]),t._v(" "),n("li",[n("p",[n("code",[t._v("socket.connect(path[, connectListener])")]),t._v(" 用于 "),n("a",{attrs:{href:"http://nodejs.cn/s/rAdYjf",target:"_blank",rel:"noopener noreferrer"}},[t._v("IPC"),n("OutboundLink")],1),t._v(" 连接。")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("socket.connect(port[, host\\][, connectListener])")]),t._v(" 用于 TCP 连接。")])]),t._v(" "),n("li",[n("p",[t._v("返回: "),n("a",{attrs:{href:"http://nodejs.cn/s/wsJ1o1",target:"_blank",rel:"noopener noreferrer"}},[t._v("net.Socket"),n("OutboundLink")],1),t._v(" socket 自身。")])])]),t._v(" "),n("p",[t._v("该方法是异步的。当连接建立了的时候，"),n("a",{attrs:{href:"http://nodejs.cn/s/BwGGNR",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("'connect'")]),n("OutboundLink")],1),t._v(" 事件将会被触发。如果连接过程中有问题，"),n("a",{attrs:{href:"http://nodejs.cn/s/v5sbt8",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("'error'")]),n("OutboundLink")],1),t._v(" 事件将会代替 "),n("a",{attrs:{href:"http://nodejs.cn/s/BwGGNR",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("'connect'")]),n("OutboundLink")],1),t._v(" 事件被触发，并将错误信息传递给 "),n("a",{attrs:{href:"http://nodejs.cn/s/v5sbt8",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("'error'")]),n("OutboundLink")],1),t._v(" 监听器。 最后一个参数 "),n("code",[t._v("connectListener")]),t._v("，如果指定了，将会被添加为 "),n("a",{attrs:{href:"http://nodejs.cn/s/BwGGNR",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("'connect'")]),n("OutboundLink")],1),t._v(" 事件的监听器。")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" net "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'net'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnet"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("port")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("onread")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 为套接字的每次读取复用 4KiB 的 Buffer。")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("buffer")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Buffer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alloc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("callback")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("nread"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" buf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 收到的数据在 `buf` 中可用，从 0 到 'nread`。")]),t._v("\n      console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utf8'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nread"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br")])]),n("h3",{attrs:{id:"_3-5socket-destroy-error"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-5socket-destroy-error"}},[t._v("🌙")]),t._v(" 3.5"),n("code",[t._v("socket.destroy([error])")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("error")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object"),n("OutboundLink")],1)]),t._v(" "),n("li",[t._v("返回: "),n("a",{attrs:{href:"http://nodejs.cn/s/wsJ1o1",target:"_blank",rel:"noopener noreferrer"}},[t._v("net.Socket"),n("OutboundLink")],1)])]),t._v(" "),n("p",[t._v("确保在此 socket 上不再有 I/O 活动。 销毁流并关闭连接。有关更多详细信息，参见 "),n("a",{attrs:{href:"http://nodejs.cn/s/tLkQ7J",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("writable.destroy()")]),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("h3",{attrs:{id:"_3-6-socket-end-data-encoding-callback"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-socket-end-data-encoding-callback"}},[t._v("🌙")]),t._v(" 3.6  "),n("code",[t._v("socket.end([data[, encoding]][, callback])")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("data")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t._v("string"),n("OutboundLink")],1),t._v(" | "),n("a",{attrs:{href:"http://nodejs.cn/s/6x1hD3",target:"_blank",rel:"noopener noreferrer"}},[t._v("Buffer"),n("OutboundLink")],1),t._v(" | "),n("a",{attrs:{href:"http://nodejs.cn/s/ZbDkpm",target:"_blank",rel:"noopener noreferrer"}},[t._v("Unit8Array"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("code",[t._v("encoding")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t._v("string"),n("OutboundLink")],1),t._v(" 仅当 "),n("code",[t._v("data")]),t._v(" 是字符串时有效。"),n("strong",[t._v("默认值:")]),t._v(" "),n("code",[t._v("'utf8'")]),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("callback")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[t._v("function"),n("OutboundLink")],1),t._v(" 当 socket 完成时的回调函数。")]),t._v(" "),n("li",[t._v("返回: "),n("a",{attrs:{href:"http://nodejs.cn/s/wsJ1o1",target:"_blank",rel:"noopener noreferrer"}},[t._v("net.Socket"),n("OutboundLink")],1),t._v(" socket 本身。")])]),t._v(" "),n("p",[t._v("半关闭 socket。 例如发送一个 FIN 包。 服务端仍可以发送数据。")]),t._v(" "),n("p",[t._v("如果指定了 "),n("code",[t._v("data")]),t._v("，则相当于调用 "),n("code",[t._v("socket.write(data, encoding)")]),t._v(" 之后再调用 "),n("a",{attrs:{href:"http://nodejs.cn/s/RyEJPD",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("socket.end()")]),n("OutboundLink")],1),t._v("。有关更多详细信息，参见 "),n("a",{attrs:{href:"http://nodejs.cn/s/nvArK4",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("writable.end()")]),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("h3",{attrs:{id:"_3-7-socket-setkeepalive-enable-initialdelay"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-socket-setkeepalive-enable-initialdelay"}},[t._v("🌙")]),t._v(" 3.7 "),n("code",[t._v("socket.setKeepAlive([enable][, initialDelay])")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("enable")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t._v("boolean"),n("OutboundLink")],1),t._v(" "),n("strong",[t._v("默认值:")]),t._v(" "),n("code",[t._v("false")]),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("initialDelay")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t._v("number"),n("OutboundLink")],1),t._v(" "),n("strong",[t._v("默认值:")]),t._v(" "),n("code",[t._v("0")]),t._v("。")]),t._v(" "),n("li",[t._v("返回: "),n("a",{attrs:{href:"http://nodejs.cn/s/wsJ1o1",target:"_blank",rel:"noopener noreferrer"}},[t._v("net.Socket"),n("OutboundLink")],1),t._v(" Socket 本身。")])]),t._v(" "),n("p",[t._v("启用/禁用长连接功能， 并且在第一个长连接探针被发送到一个空闲的 socket 之前可选则配置初始延迟。")]),t._v(" "),n("p",[n("code",[t._v("initialDelay")]),t._v("（毫秒）用来设置接收到最后一个数据包和发送第一个长连接探针之间的延迟。将 "),n("code",[t._v("initialDelay")]),t._v(" 设置为 "),n("code",[t._v("0")]),t._v("，则会保持默认值（或之前设置的值）不变。")]),t._v(" "),n("h3",{attrs:{id:"_3-8-socket-write-data-encoding-callback"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-socket-write-data-encoding-callback"}},[t._v("🌙")]),t._v(" 3.8 "),n("code",[t._v("socket.write(data[, encoding][, callback])")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("data")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t._v("string"),n("OutboundLink")],1),t._v(" | "),n("a",{attrs:{href:"http://nodejs.cn/s/6x1hD3",target:"_blank",rel:"noopener noreferrer"}},[t._v("Buffer"),n("OutboundLink")],1),t._v(" | "),n("a",{attrs:{href:"http://nodejs.cn/s/ZbDkpm",target:"_blank",rel:"noopener noreferrer"}},[t._v("Unit8Array"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("code",[t._v("encoding")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t._v("string"),n("OutboundLink")],1),t._v(" 仅当 "),n("code",[t._v("data")]),t._v(" 是字符串时有效。"),n("strong",[t._v("默认值:")]),t._v(" "),n("code",[t._v("'utf8'")]),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("callback")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[t._v("function"),n("OutboundLink")],1),t._v(" 当 socket 完成时的回调函数。")]),t._v(" "),n("li",[t._v("返回: "),n("a",{attrs:{href:"http://nodejs.cn/s/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t._v("boolean"),n("OutboundLink")],1)])]),t._v(" "),n("p",[t._v("在 socket 上发送数据。第二个参数制定了字符串的编码。 默认是 UTF8 编码。")]),t._v(" "),n("p",[t._v("如果全部数据都成功刷新到内核的缓冲则返回 "),n("code",[t._v("true")]),t._v("。如果全部或部分数据在用户内中排队，则返回 "),n("code",[t._v("false")]),t._v("。当缓冲再次空闲的时候将触发 "),n("a",{attrs:{href:"http://nodejs.cn/s/GyDS4X",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("'drain'")]),n("OutboundLink")],1),t._v(" 事件。")]),t._v(" "),n("p",[t._v("当数据最终都被写出之后，可选的 "),n("code",[t._v("callback")]),t._v(" 参数将会被执行（可能不会立即执行）。详见 "),n("code",[t._v("Writable")]),t._v(" 流的 "),n("a",{attrs:{href:"http://nodejs.cn/s/doppiK",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("write()")]),n("OutboundLink")],1),t._v(" 方法。")]),t._v(" "),n("h2",{attrs:{id:"_4-net其他方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-net其他方法"}},[t._v("🌙")]),t._v(" 4.net其他方法")]),t._v(" "),n("h3",{attrs:{id:"_4-1-net-connect-和net-createconnection"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-net-connect-和net-createconnection"}},[t._v("🌙")]),t._v(" 4.1 "),n("code",[t._v("net.connect()")]),t._v("和"),n("code",[t._v("net.createConnection()")])]),t._v(" "),n("p",[n("code",[t._v("net.connect()")]),t._v("是"),n("code",[t._v("net.createConnection()")]),t._v("的别名。")]),t._v(" "),n("p",[t._v("一个用于创建 "),n("a",{attrs:{href:"http://nodejs.cn/s/wsJ1o1",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("net.Socket")]),n("OutboundLink")],1),t._v(" 的工厂函数，立即使用 "),n("a",{attrs:{href:"http://nodejs.cn/s/fGCDDg",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("socket.connect()")]),n("OutboundLink")],1),t._v(" 初始化链接，然后返回启动连接的 "),n("code",[t._v("net.Socket")]),t._v("。")]),t._v(" "),n("p",[t._v("当连接建立之后，在返回的 socket 上将触发一个 "),n("a",{attrs:{href:"http://nodejs.cn/s/BwGGNR",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("'connect'")]),n("OutboundLink")],1),t._v(" 事件。若制定了最后一个参数 "),n("code",[t._v("connectListener")]),t._v("，则它将会被添加到 "),n("a",{attrs:{href:"http://nodejs.cn/s/BwGGNR",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("'connect'")]),n("OutboundLink")],1),t._v(" 事件作为一个监听器。")]),t._v(" "),n("p",[t._v("可能的参数：")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("net.connect(options[, connectListener])")])]),t._v(" "),n("li",[n("code",[t._v("net.connect(path[, connectListener\\])")]),t._v("用于 "),n("a",{attrs:{href:"http://nodejs.cn/s/rAdYjf",target:"_blank",rel:"noopener noreferrer"}},[t._v("IPC"),n("OutboundLink")],1),t._v(" 连接")]),t._v(" "),n("li",[n("code",[t._v("net.connect(port[, host\\][, connectListener])")]),t._v(" 用于 TCP 连接。")])]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" net "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'net'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" client "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" net"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createConnection")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("port")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8124")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'connect' 监听器")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'已连接到服务器'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  client"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'你好世界!\\r\\n'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nclient"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  client"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nclient"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'end'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'已从服务器断开'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br")])]),n("p",[t._v("如果要连接到 "),n("code",[t._v("/tmp/echo.sock")]),t._v("：")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" client "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" net"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createConnection")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/tmp/echo.sock'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("h3",{attrs:{id:"_4-1-net-isip-input"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-net-isip-input"}},[t._v("🌙")]),t._v(" 4.1 "),n("code",[t._v("net.isIP(input)")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("input")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t._v("string"),n("OutboundLink")],1)]),t._v(" "),n("li",[t._v("返回: "),n("a",{attrs:{href:"http://nodejs.cn/s/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t._v("integer"),n("OutboundLink")],1)])]),t._v(" "),n("p",[t._v("测试输入是否是 IP 地址。无效的字符串则返回 "),n("code",[t._v("0")]),t._v("，IPv4 地址则返回 "),n("code",[t._v("4")]),t._v("，IPv6 的地址则返回 "),n("code",[t._v("6")]),t._v("。")]),t._v(" "),n("h3",{attrs:{id:"_4-2-net-isipv4-input"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-net-isipv4-input"}},[t._v("🌙")]),t._v(" 4.2 "),n("code",[t._v("net.isIPv4(input)")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("input")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t._v("string"),n("OutboundLink")],1)]),t._v(" "),n("li",[t._v("返回: "),n("a",{attrs:{href:"http://nodejs.cn/s/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t._v("boolean"),n("OutboundLink")],1)])]),t._v(" "),n("p",[t._v("如果输入是 IPv4 地址则返回 "),n("code",[t._v("true")]),t._v("，否则返回 "),n("code",[t._v("false")]),t._v("。")]),t._v(" "),n("h3",{attrs:{id:"_4-2-net-isipv6-input"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-net-isipv6-input"}},[t._v("🌙")]),t._v(" 4.2 "),n("code",[t._v("net.isIPv6(input)")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("input")]),t._v(" "),n("a",{attrs:{href:"http://nodejs.cn/s/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t._v("string"),n("OutboundLink")],1)]),t._v(" "),n("li",[t._v("返回: "),n("a",{attrs:{href:"http://nodejs.cn/s/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t._v("boolean"),n("OutboundLink")],1)])]),t._v(" "),n("p",[t._v("如果输入是 IPv6 地址则返回 "),n("code",[t._v("true")]),t._v("，否则返回 "),n("code",[t._v("false")]),t._v("。")]),t._v(" "),n("h2",{attrs:{id:"_5-应用-端口占用检测"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-应用-端口占用检测"}},[t._v("🌙")]),t._v(" 5.应用：端口占用检测")]),t._v(" "),n("p",[t._v("在 Node.js 中，我们可以使用 net 模块来检测端口是否被占用。以下是一个简单的示例：")]),t._v(" "),n("div",{staticClass:"language-ts line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" createServer "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'node:net'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 检查端口是否可用")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isPortAvailable")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("port"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resolve"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" server "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    server"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("once")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      server"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    server"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("once")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'listening'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      server"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    server"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("port"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取可用端口")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAvailablePort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("startPort"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" port "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" startPort"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isPortAvailable")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("port"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    port"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" port"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" startPort "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PORT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PORT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br")])]),n("p",[t._v("流行的 npm 包 "),n("a",{attrs:{href:"https://github.com/node-modules/detect-port/blob/master/src/detect-port.ts",target:"_blank",rel:"noopener noreferrer"}},[t._v("detect-port"),n("OutboundLink")],1),t._v(", 也是通过 net 模块实现的。")])])}),[],!1,null,null,null);n.default=r.exports}}]);