(window.webpackJsonp=window.webpackJsonp||[]).push([[183],{889:function(s,n,e){"use strict";e.r(n);var a=e(2),t=Object(a.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"list类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#list类型"}},[s._v("🌙")]),s._v(" List类型")]),s._v(" "),n("p",[s._v("List类型和双向链表类似，既可以支持正向检索也可以支持反向检索，特征如下：")]),s._v(" "),n("ul",[n("li",[s._v("有序")]),s._v(" "),n("li",[s._v("元素可以重复")]),s._v(" "),n("li",[s._v("插入和删除快")]),s._v(" "),n("li",[s._v("查询速度一般")])]),s._v(" "),n("p",[s._v("基于这些特征，List常用来存储一个有序数据，例如： 朋友圈点赞列表、评论列表等。")]),s._v(" "),n("p",[s._v("List常见命令有：")]),s._v(" "),n("ul",[n("li",[s._v("LPUSH key element...: 向列表左侧插入一个或多个元素")]),s._v(" "),n("li",[s._v("LPOP key: 移除并返回列表左侧的第一个元素，没有则返回nil")]),s._v(" "),n("li",[s._v("RPUSH key element...: 向列表右侧插入一个或多个元素")]),s._v(" "),n("li",[s._v("RPOP key: 移除并返回列表右侧的第一个元素，没有则返回nil")]),s._v(" "),n("li",[s._v("LRANGE key start end: 返回一段脚标范围内的所有元素")]),s._v(" "),n("li",[s._v("BLPOP和BRPOP: 与LPOP和RPOP类似，只不过在没有元素时等待指定时间，而不是直接返回nil")])]),s._v(" "),n("blockquote",[n("p",[s._v("这些命令是不是和js中的数组api很类似呢")])]),s._v(" "),n("h1",{attrs:{id:"faq"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#faq"}},[s._v("🌙")]),s._v(" FAQ")]),s._v(" "),n("h2",{attrs:{id:"_1-如何利用list结构模拟一个栈"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-如何利用list结构模拟一个栈"}},[s._v("🌙")]),s._v(" 1.如何利用List结构模拟一个栈？")]),s._v(" "),n("p",[s._v("栈：入口和出口在同一边")]),s._v(" "),n("p",[s._v("1.栈的特点是后进先出，所以我们可以使用LPUSH和LPOP命令来模拟栈的操作")]),s._v(" "),n("p",[s._v("2.将元素插入到列表的左侧，相当于将元素压入栈中")]),s._v(" "),n("p",[s._v("3.从列表的左侧弹出元素，相当于从栈中弹出元素")]),s._v(" "),n("p",[s._v("例如，创建一个名为stack的列表，可以使用以下命令来模拟栈的操作：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("LPUSH stack element1\nLPUSH stack element2\nLPUSH stack element3\nLPOP stack "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 返回element3")]),s._v("\nLPOP stack "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 返回element2")]),s._v("\nLPOP stack "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 返回element1")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h2",{attrs:{id:"_2-如何利用list结构模拟一个队列"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-如何利用list结构模拟一个队列"}},[s._v("🌙")]),s._v(" 2.如何利用List结构模拟一个队列？")]),s._v(" "),n("p",[s._v("队列：入口和出口在两端")]),s._v(" "),n("p",[s._v("1.队列的特点是先进先出，所以我们可以使用LPUSH和RPOP命令来模拟队列的操作")]),s._v(" "),n("p",[s._v("2.将元素插入到列表的右侧，相当于将元素加入队列的尾部")]),s._v(" "),n("p",[s._v("3.从列表的左侧弹出元素，相当于从队列的头部弹出元素")]),s._v(" "),n("p",[s._v("例如，创建一个名为queue的列表，可以使用以下命令来模拟队列的操作：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("LPUSH queue element1\nLPUSH queue element2\nLPUSH queue element3\nRPOP queue "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 返回element1")]),s._v("\nRPOP queue "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 返回element2")]),s._v("\nRPOP queue "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 返回element3")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h2",{attrs:{id:"_3-如何利用list结构模拟一个阻塞队列"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-如何利用list结构模拟一个阻塞队列"}},[s._v("🌙")]),s._v(" 3.如何利用List结构模拟一个阻塞队列？")]),s._v(" "),n("p",[s._v("阻塞队列：入口和出口在两端。")]),s._v(" "),n("p",[s._v("1.在阻塞队列为空时，获取元素的线程会被阻塞，直到队列中有新的元素被加入；在队列已满时，插入元素的线程会被阻塞，直到队列中有空的位置。")]),s._v(" "),n("p",[s._v("2.利用BLPOP和RPUSH命令来模拟阻塞队列的操作")]),s._v(" "),n("p",[s._v("3.使用RPUSH命令将元素插入到列表的右侧，相当于将元素加入队列的尾部 4.使用BLPOP命令从列表的左侧弹出元素，如果列表为空，则阻塞等待指定时间，直到有新的元素被加入")]),s._v(" "),n("p",[s._v("例如，创建一个名为blocking_queue的列表，可以使用以下命令来模拟阻塞队列的操作：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("RPUSH blocking_queue element1\nRPUSH blocking_queue element2\nBLPOP blocking_queue "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 等待10秒，如果队列为空则阻塞等待")]),s._v("\nRPUSH blocking_queue element3\nBLPOP blocking_queue "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 返回element1")]),s._v("\nBLPOP blocking_queue "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 返回element2")]),s._v("\nBLPOP blocking_queue "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 返回element3")]),s._v("\nBLPOP blocking_queue "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 队列为空，等待10秒后返回nil")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("查看list命令：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ redis-cli\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v(" @LIST\n\n  BLPOP key "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeout")]),s._v("\n  summary: Remove and get the first element "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" a list, or block "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("until")]),s._v(" one is available\n  since: "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.0")]),s._v(".0\n\n  BRPOP key "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeout")]),s._v("\n  summary: Remove and get the last element "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" a list, or block "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("until")]),s._v(" one is available\n  since: "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.0")]),s._v(".0\n\n  BRPOPLPUSH "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" destination "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeout")]),s._v("\n  summary: Pop a value from a list, push it to another list and "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),s._v(" it"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" or block "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("until")]),s._v(" one is available\n  since: "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.2")]),s._v(".0\n\n  LINDEX key index\n  summary: Get an element from a list by its index\n  since: "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),s._v(".0\n\n  LINSERT key BEFORE"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("AFTER pivot value\n  summary: Insert an element before or after another element "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" a list\n  since: "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.2")]),s._v(".0\n\n  LLEN key\n  summary: Get the length of a list\n  since: "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),s._v(".0\n\n  LPOP key\n  summary: Remove and get the first element "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" a list\n  since: "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),s._v(".0\n\n  LPUSH key value "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("value "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  summary: Prepend one or multiple values to a list\n  since: "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),s._v(".0\n\n  LPUSHX key value\n  summary: Prepend a value to a list, only "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" the list exists\n  since: "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.2")]),s._v(".0\n\n  LRANGE key start stop\n  summary: Get a range of elements from a list\n  since: "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),s._v(".0\n\n  LREM key count value\n  summary: Remove elements from a list\n  since: "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),s._v(".0\n\n  LSET key index value\n  summary: Set the value of an element "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" a list by its index\n  since: "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),s._v(".0\n\n  LTRIM key start stop\n  summary: Trim a list to the specified range\n  since: "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),s._v(".0\n\n  RPOP key\n  summary: Remove and get the last element "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" a list\n  since: "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),s._v(".0\n\n  RPOPLPUSH "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" destination\n  summary: Remove the last element "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" a list, prepend it to another list and "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),s._v(" it\n  since: "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.2")]),s._v(".0\n\n  RPUSH key value "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("value "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  summary: Append one or multiple values to a list\n  since: "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),s._v(".0\n\n  RPUSHX key value\n  summary: Append a value to a list, only "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" the list exists\n  since: "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.2")]),s._v(".0\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);