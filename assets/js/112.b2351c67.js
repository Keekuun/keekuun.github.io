(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{810:function(s,t,a){"use strict";a.r(t);var n=a(2),r=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"graphql-从浅到深介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#graphql-从浅到深介绍"}},[s._v("🌙")]),s._v(" GraphQL 从浅到深介绍")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("入门篇：GraphQL 是什么？为什么需要它？")]),s._v(" (解决 REST API 的痛点)")]),s._v(" "),t("li",[t("strong",[s._v("核心篇：GraphQL 的三大基石")]),s._v(" (Schema, Query, Mutation)")]),s._v(" "),t("li",[t("strong",[s._v("进阶篇：前端工程师如何使用 GraphQL？")]),s._v(" (客户端工具与工作流)")]),s._v(" "),t("li",[t("strong",[s._v("总结：GraphQL 的优势与适用场景")])])]),s._v(" "),t("hr"),s._v(" "),t("h3",{attrs:{id:"第一部分-入门篇-graphql-是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第一部分-入门篇-graphql-是什么"}},[s._v("🌙")]),s._v(" 第一部分：入门篇 - GraphQL 是什么？")]),s._v(" "),t("h4",{attrs:{id:"_1-一句话定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-一句话定义"}},[s._v("🌙")]),s._v(" 1. 一句话定义")]),s._v(" "),t("p",[t("strong",[s._v("GraphQL 是一种用于 API 的查询语言，也是一个用于执行这些查询的运行时。")])]),s._v(" "),t("p",[s._v("忘掉那些复杂的术语，让我们用一个比喻来理解：")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("REST API 就像去餐厅点套餐")]),s._v("：你有套餐 A（"),t("code",[s._v("/users")]),s._v("）、套餐 B（"),t("code",[s._v("/posts")]),s._v("）、套餐 C（"),t("code",[s._v("/users/1/posts")]),s._v("）。你只能从这些固定的套餐里选，就算你只想要套餐 A 里的沙拉，你也必须把整个套餐 A 都端过来（"),t("strong",[s._v("Over-fetching，过度获取")]),s._v("）。如果你想要套餐 A 的牛排和套餐 B 的汤，你得点两次单（"),t("strong",[s._v("Under-fetching，获取不足")]),s._v("），服务员跑两趟。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("GraphQL 就像去吃高级自助餐，并有一个私人服务员")]),s._v("：你拿到一张菜单（"),t("strong",[s._v("Schema")]),s._v("，模式），上面列出了所有可用的菜品（数据类型和字段）。你只需要在一张纸上（"),t("strong",[s._v("Query")]),s._v("，查询）精确地写下你想要的东西：“一份七分熟的牛排、一碗罗宋汤、两块餐包，不要沙拉。” 然后把这张纸交给服务员。服务员一次性把你点的所有东西不多不少地精准取来。")])])]),s._v(" "),t("h4",{attrs:{id:"_2-它解决了-rest-api-的核心痛点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-它解决了-rest-api-的核心痛点"}},[s._v("🌙")]),s._v(" 2. 它解决了 REST API 的核心痛点")]),s._v(" "),t("p",[s._v("假设我们要做一个博客文章页面，需要显示：")]),s._v(" "),t("ul",[t("li",[s._v("文章内容 ("),t("code",[s._v("posts/1")]),s._v(")")]),s._v(" "),t("li",[s._v("作者信息 ("),t("code",[s._v("users/123")]),s._v(")")]),s._v(" "),t("li",[s._v("文章的评论列表 ("),t("code",[s._v("posts/1/comments")]),s._v(")")])]),s._v(" "),t("p",[s._v("在 "),t("strong",[s._v("REST")]),s._v(" 模式下，前端可能需要发送 "),t("strong",[s._v("3 次")]),s._v("网络请求：")]),s._v(" "),t("ol",[t("li",[t("code",[s._v("GET /api/posts/1")]),s._v(" -> 获取文章，得到 "),t("code",[s._v('{ "title": "...", "content": "...", "authorId": "123" }')])]),s._v(" "),t("li",[t("code",[s._v("GET /api/users/123")]),s._v(" -> 使用上一步的 "),t("code",[s._v("authorId")]),s._v(" 获取作者信息")]),s._v(" "),t("li",[t("code",[s._v("GET /api/posts/1/comments")]),s._v(" -> 获取评论列表")])]),s._v(" "),t("p",[t("strong",[s._v("痛点很明显：")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("多次往返 (Multiple Round-Trips)")]),s._v("：三次请求增加了加载时间。")]),s._v(" "),t("li",[t("strong",[s._v("过度获取 (Over-fetching)")]),s._v("：获取作者信息时，可能返回了作者的住址、注册日期等我们根本不需要的字段。")]),s._v(" "),t("li",[t("strong",[s._v("前端的脆弱性 (Frontend Fragility)")]),s._v("：如果 UI 改版，需要显示作者的粉丝数，但原来的 "),t("code",[s._v("/api/users/123")]),s._v(" 接口没有返回这个字段，怎么办？你必须请求后端工程师修改接口，然后重新部署后端。前端的开发被后端牢牢“卡脖子”。")])]),s._v(" "),t("p",[s._v("在 "),t("strong",[s._v("GraphQL")]),s._v(" 模式下，前端只需要发送 "),t("strong",[s._v("1 次")]),s._v("请求：")]),s._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// GraphQL Query (这是一个字符串，不是执行代码)")]),s._v("\nquery GetPostDetails "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("post")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    title\n    content\n    author "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      name\n      avatarUrl\n      followerCount "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 看，我们精确地要了粉丝数")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    comments "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      body\n      createdAt\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("p",[t("strong",[s._v("服务器会返回一个与你查询结构完全一致的 JSON 对象，不多不少，一次搞定。")]),s._v(" 这就是 GraphQL 的魔力："),t("strong",[s._v("前端拥有数据的主导权")]),s._v("。")]),s._v(" "),t("hr"),s._v(" "),t("h3",{attrs:{id:"第二部分-核心篇-graphql-的三大基石"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第二部分-核心篇-graphql-的三大基石"}},[s._v("🌙")]),s._v(" 第二部分：核心篇 - GraphQL 的三大基石")]),s._v(" "),t("p",[s._v("GraphQL 的所有交互都建立在三个核心概念之上。")]),s._v(" "),t("h4",{attrs:{id:"_1-schema-模式-api-的-说明书"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-schema-模式-api-的-说明书"}},[s._v("🌙")]),s._v(" 1. Schema (模式)：API 的“说明书”")]),s._v(" "),t("p",[s._v("Schema 是 GraphQL API 的核心，它是前端和后端之间的“契约” (Contract)。它使用"),t("strong",[s._v("模式定义语言 (Schema Definition Language, SDL)")]),s._v(" 来定义 API 中所有可能的数据类型和操作。")]),s._v(" "),t("p",[t("strong",[s._v("Schema 是强类型的")]),s._v("，这为前端带来了巨大的好处（比如代码提示和静态检查）。")]),s._v(" "),t("p",[s._v("一个简单的博客 Schema 示例 ("),t("code",[s._v(".graphql")]),s._v(" 文件)：")]),s._v(" "),t("div",{staticClass:"language-graphql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-graphql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义一个 Post 类型，包含 id、标题、内容和作者")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Post")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token scalar"}},[s._v("ID")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ID 是特殊标量类型，! 表示此字段不可为空")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("title")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token scalar"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("content")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token scalar"}},[s._v("String")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("author")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Author")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 字段可以是另一个自定义类型")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义一个 Author 类型")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Author")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token scalar"}},[s._v("ID")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token scalar"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("posts")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Post")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# [Post!] 表示这是一个 Post 数组，数组本身和数组成员都不能为空")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这是所有“读”操作的入口")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Query")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 根据 ID 获取一篇 Post")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("post")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token scalar"}},[s._v("ID")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Post")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取所有 Posts")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("allPosts")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Post")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br")])]),t("p",[s._v("这个 Schema 清晰地告诉前端：“你可以查询 "),t("code",[s._v("post")]),s._v(" 或 "),t("code",[s._v("allPosts")]),s._v("，如果你查询 "),t("code",[s._v("post")]),s._v("，必须提供一个 "),t("code",[s._v("id")]),s._v("，我会返回一个 "),t("code",[s._v("Post")]),s._v(" 类型的数据给你。”")]),s._v(" "),t("h4",{attrs:{id:"_2-query-查询-获取数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-query-查询-获取数据"}},[s._v("🌙")]),s._v(" 2. Query (查询)：获取数据")]),s._v(" "),t("p",[s._v("Query 就是我们前面看到的，用来读取或获取数据的操作。它的语法非常直观。")]),s._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 基础查询")]),s._v("\nquery "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  allPosts "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    title\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 带参数的查询")]),s._v("\nquery GetSinglePost "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("post")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    title\n    author "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      name\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用别名 (Alias) 来避免字段冲突")]),s._v("\nquery ComparePosts "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  postOne"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("post")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    title\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  postTwo"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("post")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    title\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br")])]),t("h4",{attrs:{id:"_3-mutation-变更-修改数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-mutation-变更-修改数据"}},[s._v("🌙")]),s._v(" 3. Mutation (变更)：修改数据")]),s._v(" "),t("p",[s._v("如果 Query 对应于 HTTP "),t("code",[s._v("GET")]),s._v("，那么 Mutation 就对应于 "),t("code",[s._v("POST")]),s._v(", "),t("code",[s._v("PUT")]),s._v(", "),t("code",[s._v("PATCH")]),s._v(", "),t("code",[s._v("DELETE")]),s._v("。它用于创建、更新或删除数据。")]),s._v(" "),t("p",[s._v("Mutation 的语法和 Query 非常相似，但需要使用 "),t("code",[s._v("mutation")]),s._v(" 关键字。")]),s._v(" "),t("p",[s._v("我们来扩展一下 Schema，增加一个创建文章的 Mutation：")]),s._v(" "),t("div",{staticClass:"language-graphql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-graphql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ... 上面的 Post, Author, Query 类型 ...")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这是所有“写”操作的入口")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Mutation")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("createPost")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("title")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token scalar"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("content")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token scalar"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Post")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("前端这样调用它：")]),s._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[s._v("mutation CreateNewPost "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("createPost")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("title"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello GraphQL"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" content"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"This is my first post."')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    # 就像 Query 一样，你可以在变更后立即查询新创建的数据\n    id\n    title\n    createdAt # 假设 Schema 中有这个字段\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[t("strong",[s._v("关键点")]),s._v("：Mutation 执行后也可以像 Query 一样选择性地返回数据。这非常方便，比如创建用户后可以立即获取新用户的 ID。")]),s._v(" "),t("p",[t("em",[s._v("还有一个高级概念叫 "),t("strong",[s._v("Subscription")]),s._v("，用于实现实时数据推送（如聊天应用），它基于 WebSocket，我们这里暂时不深入。")])]),s._v(" "),t("hr"),s._v(" "),t("h3",{attrs:{id:"第三部分-进阶篇-前端工程师如何使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第三部分-进阶篇-前端工程师如何使用"}},[s._v("🌙")]),s._v(" 第三部分：进阶篇 - 前端工程师如何使用？")]),s._v(" "),t("p",[s._v("作为前端，我们不会手动去 "),t("code",[s._v("fetch")]),s._v(" 这些查询字符串。我们会使用成熟的 GraphQL 客户端库。")]),s._v(" "),t("h4",{attrs:{id:"_1-主流的-graphql-客户端"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-主流的-graphql-客户端"}},[s._v("🌙")]),s._v(" 1. 主流的 GraphQL 客户端")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("Apollo Client")]),s._v(": 目前最流行、功能最全面的客户端。它不仅仅是一个请求库，更是一个强大的状态管理库，能自动缓存数据，与 React, Vue, Angular 等框架深度集成。")]),s._v(" "),t("li",[t("strong",[s._v("Relay (Modern)")]),s._v(": 由 Facebook 开发，与 React 深度绑定，设计哲学非常严谨，性能极佳，但学习曲线较陡。")]),s._v(" "),t("li",[t("strong",[s._v("urql")]),s._v(": 一个轻量级、可扩展的 Apollo 替代品，近年来很受欢迎。")])]),s._v(" "),t("h4",{attrs:{id:"_2-前端工作流-以-apollo-client-react-typescript-为例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-前端工作流-以-apollo-client-react-typescript-为例"}},[s._v("🌙")]),s._v(" 2. 前端工作流（以 Apollo Client + React/TypeScript 为例）")]),s._v(" "),t("p",[t("strong",[s._v("步骤 1: 安装依赖")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" @apollo/client graphql\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("步骤 2: 在应用根目录配置 ApolloProvider")])]),s._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// index.tsx")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" ApolloClient"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" InMemoryCache"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ApolloProvider "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'@apollo/client'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" client "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ApolloClient")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  uri"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'https://your-api.com/graphql'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 你的 GraphQL 服务端点")]),s._v("\n  cache"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InMemoryCache")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 开启强大的内存缓存")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 用 ApolloProvider 包裹你的 App")]),s._v("\nReactDOM"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("ApolloProvider client"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("App "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("ApolloProvider"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  document"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getElementById")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'root'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("p",[t("strong",[s._v("步骤 3: 在组件中使用 "),t("code",[s._v("useQuery")]),s._v(" Hook 发送查询")])]),s._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// PostPage.tsx")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" gql"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" useQuery "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'@apollo/client'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1. 定义你的 GraphQL 查询，gql 标签会将其解析为 AST")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("GET_POST_DETAILS")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" gql"),t("span",{pre:!0,attrs:{class:"token template-string"}},[t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\n  query GetPostDetails($postId: ID!) {\n    post(id: $postId) {\n      id\n      title\n      content\n      author {\n        name\n      }\n    }\n  }\n")]),t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("PostPage")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" postId "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" postId"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2. 调用 useQuery Hook，传入查询和变量")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" loading"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" error"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" data "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("useQuery")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("GET_POST_DETAILS")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    variables"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" postId "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3. 处理不同的状态")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("loading"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("Loading"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("error"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("Error"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("error"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("message"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("No data found"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 4. 渲染数据")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("div"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("h1"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("post"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("title"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("h1"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("By "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("post"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("author"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("article"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("post"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("content"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("article"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("div"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br")])]),t("h4",{attrs:{id:"_3-神器-graphiql-和-code-generation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-神器-graphiql-和-code-generation"}},[s._v("🌙")]),s._v(" 3. 神器：GraphiQL 和 Code Generation")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("GraphiQL/GraphQL Playground")]),s._v(": 这是一个交互式的浏览器内 IDE。后端服务通常会提供一个 "),t("code",[s._v("/graphiql")]),s._v(" 端点，打开它，你就可以看到完整的 Schema 文档，实时编写和测试你的 Query/Mutation，并获得智能提示。这是调试和探索 API 的神器。")]),s._v(" "),t("li",[t("strong",[s._v("Code Generation")]),s._v(": 这是 GraphQL + TypeScript 的终极杀手锏。通过 "),t("code",[s._v("graphql-codegen")]),s._v(" 这类工具，你可以"),t("strong",[s._v("根据后端的 Schema 自动生成所有 TypeScript 类型")]),s._v("！这意味着 "),t("code",[s._v("useQuery")]),s._v(" 返回的 "),t("code",[s._v("data")]),s._v(" 对象拥有完整的类型定义，你永远不用手写 "),t("code",[s._v("interface")]),s._v("，并且如果后端修改了 Schema（比如把 "),t("code",[s._v("author.name")]),s._v(" 改成 "),t("code",[s._v("author.fullName")]),s._v("），你的 TypeScript 项目会在编译时就报错，从而在开发阶段就发现问题。")])]),s._v(" "),t("hr"),s._v(" "),t("h3",{attrs:{id:"第四部分-总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第四部分-总结"}},[s._v("🌙")]),s._v(" 第四部分：总结")]),s._v(" "),t("p",[t("strong",[s._v("GraphQL 的核心优势")])]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("精确获取，杜绝浪费")]),s._v("：解决了 Over-fetching 和 Under-fetching。")]),s._v(" "),t("li",[t("strong",[s._v("前端主导，快速迭代")]),s._v("：前端不再依赖后端发布新端点，可以自由组合所需数据，开发效率极高。")]),s._v(" "),t("li",[t("strong",[s._v("强类型 Schema")]),s._v("：API 即文档，配合工具能实现端到端的类型安全。")]),s._v(" "),t("li",[t("strong",[s._v("单一端点，简化 API 管理")]),s._v("：所有请求都发往同一个 URL（如 "),t("code",[s._v("/graphql")]),s._v("），API 结构更清晰。")])]),s._v(" "),t("p",[t("strong",[s._v("适用场景")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("复杂的前端应用")]),s._v("：需要从多个数据源聚合信息的应用，如仪表盘 (Dashboard)。")]),s._v(" "),t("li",[t("strong",[s._v("多客户端应用")]),s._v("：当你有 Web、iOS、Android 等多个客户端时，GraphQL 可以让每个客户端按需获取数据，而无需为它们各自创建定制化的 REST 端点。")]),s._v(" "),t("li",[t("strong",[s._v("微服务架构")]),s._v('：GraphQL 可以作为 "API Gateway"（网关），将多个下游微服务的数据聚合并统一暴露给前端。')])])])}),[],!1,null,null,null);t.default=r.exports}}]);