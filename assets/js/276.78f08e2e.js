(window.webpackJsonp=window.webpackJsonp||[]).push([[276],{992:function(s,t,a){"use strict";a.r(t);var e=a(2),r=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("线上用户反馈页面白屏是一个**P0级（最高优先级）**的紧急问题。现在我们的 Next.js 应用是使用 PM2 直接部署在服务器（可能是虚拟机或物理机）上的。排查逻辑——"),t("strong",[s._v("区分客户端与服务端、以日志为中心")]),s._v("。")]),s._v(" "),t("h3",{attrs:{id:"pm2-环境下的应急响应与定位流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pm2-环境下的应急响应与定位流程"}},[s._v("🌙")]),s._v(" PM2 环境下的应急响应与定位流程")]),s._v(" "),t("h4",{attrs:{id:"第-1-阶段-紧急评估与快速止损-first-5-minutes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第-1-阶段-紧急评估与快速止损-first-5-minutes"}},[s._v("🌙")]),s._v(" 第 1 阶段：紧急评估与快速止损 (First 5 Minutes)")]),s._v(" "),t("p",[t("strong",[s._v("1. 复现与浏览器端分析 (与之前一致)")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("隐身模式")]),s._v("打开出问题的页面。")]),s._v(" "),t("li",[t("strong",[s._v("打开开发者工具 (F12)")]),s._v("：\n"),t("ul",[t("li",[t("strong",[s._v("Console (控制台)")]),s._v(": 是否有 JavaScript 错误？这是区分客户端/服务端问题的第一个关键线索。")]),s._v(" "),t("li",[t("strong",[s._v("Network (网络)")]),s._v(": 页面本身（HTML 文档）的请求状态码是 200 还是 5xx？")])])])]),s._v(" "),t("p",[t("strong",[s._v("2. 立刻检查 PM2 日志！")]),s._v("\n这是整个排查过程的核心。你需要 SSH 登录到应用服务器。PM2 会管理应用的日志输出 (stdout) 和错误输出 (stderr)。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1. 查看由 PM2 管理的所有应用的状态")]),s._v("\npm2 status\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2. 查看应用的实时日志 (将 <app_name> 替换为你的应用名或ID)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这是最常用的命令，会同时显示标准输出和错误输出")]),s._v("\npm2 logs "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("app_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3. 只看错误日志，这通常更有价值！")]),s._v("\npm2 logs "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("app_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--err")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 4. 如果日志太多，可以只看最后几百行")]),s._v("\npm2 logs "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("app_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--lines")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[t("strong",[s._v("在日志中你要寻找什么？")])]),s._v(" "),t("ul",[t("li",[s._v("任何 "),t("code",[s._v("Error:")]),s._v(" 开头的堆栈跟踪 (stack trace)。")]),s._v(" "),t("li",[s._v("数据库连接错误、第三方 API 超时、文件权限问题等。")]),s._v(" "),t("li",[s._v("特别注意，如果应用频繁重启，"),t("code",[s._v("pm2 status")]),s._v(" 会显示 "),t("code",[s._v("restarts")]),s._v(" 次数很高。这通常是致命错误导致进程崩溃的迹象。")])]),s._v(" "),t("p",[t("strong",[s._v("3. 快速决策：回滚")]),s._v("\n如果问题是最近的上线导致的，最快的恢复方法是回滚代码。在 PM2 的场景下，通常是一个原子化的操作：")]),s._v(" "),t("ul",[t("li",[s._v("常见的部署策略（如 Capistrano 风格）会将每个版本部署到带时间戳的目录中，并用一个名为 "),t("code",[s._v("current")]),s._v(" 的软链接指向当前版本。")]),s._v(" "),t("li",[t("strong",[s._v("回滚操作")]),s._v("：将 "),t("code",[s._v("current")]),s._v(" 软链接指向上一个稳定的版本目录，然后执行 "),t("code",[s._v("pm2 reload <app_name>")]),s._v("。这可以实现零停机回滚。")])]),s._v(" "),t("hr"),s._v(" "),t("h3",{attrs:{id:"第-2-阶段-深度定位问题根源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第-2-阶段-深度定位问题根源"}},[s._v("🌙")]),s._v(" 第 2 阶段：深度定位问题根源")]),s._v(" "),t("h4",{attrs:{id:"场景一-定位客户端错误-浏览器控制台有-js-错"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#场景一-定位客户端错误-浏览器控制台有-js-错"}},[s._v("🌙")]),s._v(" 场景一：定位客户端错误 (浏览器控制台有 JS 错)")]),s._v(" "),t("p",[t("strong",[s._v("挑战")]),s._v("：和 Docker 场景一样，你看到的将是压缩后的代码堆栈。")]),s._v(" "),t("p",[t("strong",[s._v("解决方案：本地复现与 Source Map 解码")])]),s._v(" "),t("ol",[t("li",[t("p",[t("strong",[s._v("获取构建产物")]),s._v(":\n你的构建产物（包括 Source Maps）就在服务器的文件系统上，位于你的项目部署目录下的 "),t("code",[s._v(".next")]),s._v(" 文件夹里。你可以使用 "),t("code",[s._v("scp")]),s._v(" 或 "),t("code",[s._v("rsync")]),s._v(" 将整个 "),t("code",[s._v(".next")]),s._v(" 目录从服务器下载到本地。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 语法: scp -r user@your_server_ip:/path/to/your/app/.next ./")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("scp")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v(" ubuntu@123.45.67.89:/var/www/my-app/current/.next ./local-next-build\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("手动解码")]),s._v(":\n有了 "),t("code",[s._v(".next")]),s._v(" 目录，接下来的步骤就和 Docker 场景完全一样了：找到报错的文件名、行列号，然后使用 "),t("code",[s._v("source-map")]),s._v(" 库或在线工具，结合对应的 "),t("code",[s._v(".map")]),s._v(" 文件来定位到原始的 TypeScript 代码。")])])]),s._v(" "),t("h4",{attrs:{id:"场景二-定位服务端错误-页面请求-500-或-pm2-不断重启"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#场景二-定位服务端错误-页面请求-500-或-pm2-不断重启"}},[s._v("🌙")]),s._v(" 场景二：定位服务端错误 (页面请求 500 或 PM2 不断重启)")]),s._v(" "),t("p",[s._v("这是 PM2 环境下最需要关注的情况。")]),s._v(" "),t("p",[t("strong",[s._v("解决方案：深挖日志、检查环境和系统资源")])]),s._v(" "),t("ol",[t("li",[t("p",[t("strong",[s._v("深挖 PM2 日志")]),s._v("：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("pm2 logs --err")]),s._v(" 是你的好朋友。服务端的堆栈跟踪是"),t("strong",[s._v("可读的")]),s._v("，会直接指向你代码中的文件和行号。")]),s._v(" "),t("li",[t("strong",[s._v("实施结构化日志")]),s._v("：这个建议依然适用。将错误包装在 JSON 对象中输出，可以让日志分析事半功倍。")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("检查环境变量")]),s._v("：\nPM2 应用的环境变量来源主要有两个：")]),s._v(" "),t("ul",[t("li",[t("strong",[t("code",[s._v("ecosystem.config.js")]),s._v(" 文件")]),s._v("：这是 PM2 的最佳实践。检查项目根目录下的这个文件，特别是 "),t("code",[s._v("env")]),s._v(" 和 "),t("code",[s._v("env_production")]),s._v(" 部分。"),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ecosystem.config.js")]),s._v("\nmodule"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("apps")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'my-next-app'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("script")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'node_modules/.bin/next'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("args")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'start'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("env_production")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NODE_ENV")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'production'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PORT")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 检查这里的 DATABASE_URL, API_KEY 等是否正确配置")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DATABASE_URL")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'...'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])])]),s._v(" "),t("li",[t("strong",[s._v("系统级环境变量")]),s._v("：检查运行 PM2 的用户的环境变量设置，如 "),t("code",[s._v("~/.bashrc")]),s._v(" 或 "),t("code",[s._v("~/.profile")]),s._v("。使用 "),t("code",[s._v("echo $VARIABLE_NAME")]),s._v(" 确认。")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("检查系统资源 (PM2 独特优势与劣势)")]),s._v("\n与 Docker 不同，PM2 进程与服务器上的其他进程共享资源。资源耗尽是常见问题。")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("内存溢出 (Out of Memory)")]),s._v(": Node.js 应用如果内存泄漏，可能会被系统的 OOM Killer 杀死，导致 PM2 不断重启。\n"),t("ul",[t("li",[t("strong",[s._v("使用 "),t("code",[s._v("pm2 monit")])]),s._v("：这个命令提供了一个漂亮的终端仪表盘，可以实时监控每个应用的 CPU 和内存使用情况。")]),s._v(" "),t("li",[t("strong",[s._v("使用系统命令")]),s._v("："),t("code",[s._v("htop")]),s._v(" 或 "),t("code",[s._v("top")]),s._v(" 可以看到进程的资源占用。"),t("code",[s._v('dmesg -T | grep -i "killed process"')]),s._v(" 可以查看是否有进程被系统杀死。")])])]),s._v(" "),t("li",[t("strong",[s._v("CPU 占用过高")]),s._v(": 检查是否有死循环或高计算量的操作。")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("检查文件权限")]),s._v("：")]),s._v(" "),t("ul",[t("li",[s._v("确认运行 PM2 的用户（在 "),t("code",[s._v("pm2 status")]),s._v(" 中可以看到 "),t("code",[s._v("user")]),s._v("）对项目目录有正确的读/写权限，特别是对 "),t("code",[s._v(".next")]),s._v(" 目录和任何需要写入的缓存目录。")]),s._v(" "),t("li",[s._v("使用 "),t("code",[s._v("ls -l /path/to/your/app")]),s._v(" 来检查。")])])])]),s._v(" "),t("hr"),s._v(" "),t("h3",{attrs:{id:"pm2-环境下的白屏问题排查清单"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pm2-环境下的白屏问题排查清单"}},[s._v("🌙")]),s._v(" PM2 环境下的白屏问题排查清单")]),s._v(" "),t("ol",[t("li",[t("code",[s._v("[ ]")]),s._v(" "),t("strong",[s._v("复现")]),s._v(": 在浏览器隐身模式下复现问题，检查"),t("strong",[s._v("控制台")]),s._v("和"),t("strong",[s._v("网络")]),s._v("面板，初步判断是客户端还是服务端问题。")]),s._v(" "),t("li",[t("code",[s._v("[ ]")]),s._v(" "),t("strong",[s._v("查日志")]),s._v(": "),t("code",[s._v("ssh")]),s._v(" 登录服务器，立即执行 "),t("code",[s._v("pm2 logs <app_name> --err --lines 200")]),s._v(" 查看错误日志。")]),s._v(" "),t("li",[t("code",[s._v("[ ]")]),s._v(" "),t("strong",[s._v("查状态")]),s._v(": "),t("code",[s._v("pm2 status")]),s._v("，检查应用的 "),t("code",[s._v("status")]),s._v(" 是否为 "),t("code",[s._v("online")]),s._v("，"),t("code",[s._v("restarts")]),s._v(" 次数是否异常高。")]),s._v(" "),t("li",[t("code",[s._v("[ ]")]),s._v(" "),t("strong",[s._v("决策")]),s._v(": 如果是新上线导致，通过修改软链接并 "),t("code",[s._v("pm2 reload <app_name>")]),s._v(" "),t("strong",[s._v("立即回滚")]),s._v("。")]),s._v(" "),t("li",[t("code",[s._v("[ ]")]),s._v(" "),t("strong",[s._v("深度定位")]),s._v(":\n"),t("ul",[t("li",[t("strong",[s._v("客户端问题")]),s._v(": "),t("code",[s._v("scp")]),s._v(" 下载 "),t("code",[s._v(".next")]),s._v(" 目录，在本地进行 Source Map 解码。")]),s._v(" "),t("li",[t("strong",[s._v("服务端问题")]),s._v(":\n"),t("ul",[t("li",[t("code",[s._v("[ ]")]),s._v(" 仔细分析 "),t("code",[s._v("pm2 logs")]),s._v(" 中的堆栈跟踪。")]),s._v(" "),t("li",[t("code",[s._v("[ ]")]),s._v(" 检查 "),t("code",[s._v("ecosystem.config.js")]),s._v(" 中的环境变量是否正确。")]),s._v(" "),t("li",[t("code",[s._v("[ ]")]),s._v(" 使用 "),t("code",[s._v("pm2 monit")]),s._v(" 或 "),t("code",[s._v("htop")]),s._v(" 检查应用的内存和 CPU 使用情况，排查资源耗尽问题。")]),s._v(" "),t("li",[t("code",[s._v("[ ]")]),s._v(" 使用 "),t("code",[s._v("ls -l")]),s._v(" 检查文件权限是否正确。")])])])])]),s._v(" "),t("li",[t("code",[s._v("[ ]")]),s._v(" "),t("strong",[s._v("修复与预防")]),s._v(":\n"),t("ul",[t("li",[t("code",[s._v("[ ]")]),s._v(" 修复代码后，通过 CI/CD 流程或手动部署新版本。")]),s._v(" "),t("li",[t("code",[s._v("[ ]")]),s._v(" "),t("strong",[s._v("强烈建议")]),s._v(": 推动运维或自己动手，将 PM2 的日志（位于 "),t("code",[s._v("~/.pm2/logs/")]),s._v("）通过 Filebeat 等工具转发到集中的日志平台（如 ELK, Loki）。")]),s._v(" "),t("li",[t("code",[s._v("[ ]")]),s._v(" "),t("strong",[s._v("强烈建议")]),s._v(": 为你的应用创建一个 "),t("code",[s._v("/api/health")]),s._v(" 健康检查接口，并使用外部监控工具（如 Uptime Kuma 或一个简单的 cron 脚本）定期调用，实现应用存活监控。")])])])]),s._v(" "),t("h3",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("🌙")]),s._v(" 总结")]),s._v(" "),t("p",[s._v("线上白屏问题在 PM2 环境下的排查流程与 Docker 有很多相似之处，但也有其独特的挑战和解决方案。通过系统化的日志分析、环境检查和资源监控，你可以快速定位问题并恢复服务。同时，建立良好的日志和健康检查机制，将大大提高未来问题的排查效率。")]),s._v(" "),t("blockquote",[t("p",[t("RouterLink",{attrs:{to:"/frontEnd/nextjs/nextjs-error-check.html"}},[s._v("Next.js 线上白屏问题排查指南（Sentry监控版）")])],1),s._v(" "),t("p",[t("RouterLink",{attrs:{to:"/frontEnd/nextjs/nextjs-error-check2.html"}},[s._v("Next.js 线上白屏问题排查指南（Docker部署版）")])],1)])])}),[],!1,null,null,null);t.default=r.exports}}]);