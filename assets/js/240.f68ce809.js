(window.webpackJsonp=window.webpackJsonp||[]).push([[240],{948:function(t,e,s){"use strict";s.r(e);var a=s(2),r=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"父传子"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#父传子"}},[t._v("🌙")]),t._v(" 父传子")]),t._v(" "),e("p",[t._v("在父组件中初始化数据，将子组件的"),e("code",[t._v("props")]),t._v("属性值通过父组件的状态"),e("code",[t._v("state")]),t._v("来管理，父组件通过调用"),e("code",[t._v("setState")]),t._v("方法来更新子组件数据：")]),t._v(" "),e("iframe",{staticStyle:{width:"100%"},attrs:{height:"265",scrolling:"no",title:"React父子组件的通信",src:"https://codepen.io/zkkysqs/embed/RwwmJxO?height=265&theme-id=default&default-tab=js,result",frameborder:"no",allowtransparency:"true",allowfullscreen:"true"}},[t._v("\n  See the Pen "),e("a",{attrs:{href:"https://codepen.io/zkkysqs/pen/RwwmJxO"}},[t._v("React父子组件的通信")]),t._v(" by zkkysqs\n  ("),e("a",{attrs:{href:"https://codepen.io/zkkysqs"}},[t._v("@zkkysqs")]),t._v(") on "),e("a",{attrs:{href:"https://codepen.io"}},[t._v("CodePen")]),t._v(".\n")]),t._v(" "),e("h2",{attrs:{id:"子传父"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#子传父"}},[t._v("🌙")]),t._v(" 子传父")]),t._v(" "),e("p",[t._v("在子组件中初始化数据，在子组件构造方法中通过"),e("code",[t._v("props")]),t._v("调用父组件回调函数设置"),e("code",[t._v("setState")]),t._v("，更新父组件的"),e("code",[t._v("state")]),t._v("状态，从而更新父组件数据：")]),t._v(" "),e("iframe",{staticStyle:{width:"100%"},attrs:{height:"265",scrolling:"no",title:"React 父子之间的通信-子传父",src:"https://codepen.io/zkkysqs/embed/ExxzRJp?height=265&theme-id=default&default-tab=js,result",frameborder:"no",allowtransparency:"true",allowfullscreen:"true"}},[t._v("\n  See the Pen "),e("a",{attrs:{href:"https://codepen.io/zkkysqs/pen/ExxzRJp"}},[t._v("React 父子之间的通信-子传父")]),t._v(" by zkkysqs\n  ("),e("a",{attrs:{href:"https://codepen.io/zkkysqs"}},[t._v("@zkkysqs")]),t._v(") on "),e("a",{attrs:{href:"https://codepen.io"}},[t._v("CodePen")]),t._v(".\n")]),t._v(" "),e("h2",{attrs:{id:"任意组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#任意组件"}},[t._v("🌙")]),t._v(" 任意组件")]),t._v(" "),e("p",[t._v("任意组件间的通信，若不借助其他库，一般借用消息中间件和状态管理来实现：")]),t._v(" "),e("p",{staticClass:"codepen",staticStyle:{height:"265px","box-sizing":"border-box",display:"flex","align-items":"center","justify-content":"center",border:"2px solid",margin:"1em 0",padding:"1em"},attrs:{"data-height":"265","data-theme-id":"default","data-default-tab":"js,result","data-user":"zkkysqs","data-slug-hash":"eYYajNK","data-pen-title":"React组件间的通信-消息接口"}},[e("span",[t._v("See the Pen "),e("a",{attrs:{href:"https://codepen.io/zkkysqs/pen/eYYajNK"}},[t._v("\n  React组件间的通信-消息接口")]),t._v(" by zkkysqs ("),e("a",{attrs:{href:"https://codepen.io/zkkysqs"}},[t._v("@zkkysqs")]),t._v(")\n  on "),e("a",{attrs:{href:"https://codepen.io"}},[t._v("CodePen")]),t._v(".")])]),t._v(" "),e("script",{attrs:{async:"",src:"https://static.codepen.io/assets/embed/ei.js"}}),t._v("\n 消息中间件的模式非常简单，利用了观察者模式，将两个组件之间的耦合解耦成了组件和消息中心+消息名称的耦合 ，但为了解耦却引入全局消息中心和消息名称，消息中心对组件的侵入性很强 ，谨慎使用。\n"),e("h2",{attrs:{id:"单向数据流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#单向数据流"}},[t._v("🌙")]),t._v(" 单向数据流")]),t._v(" "),e("p",[t._v("现在，我们已经知道：")]),t._v(" "),e("ul",[e("li",[t._v("父传子：父组件通过"),e("code",[t._v("props")]),t._v("直接赋值的形式实现，更新数据使用"),e("code",[t._v("state")]),t._v("管理状态，直接调用"),e("code",[t._v("this.setState")]),t._v("方法。")]),t._v(" "),e("li",[t._v("子传父：子组件通过"),e("code",[t._v("props")]),t._v("调用父组件的方法，从而间接调用父组件的"),e("code",[t._v("this.setState")]),t._v("方法将子组件的数据传给父组件，并更新父组件视图。")])]),t._v(" "),e("p",[t._v("单向数据流是指数据的流向只能由父组件通过"),e("code",[t._v("props")]),t._v("将数据传递给子组件，不能由子组件向父组件传递数据，要想实现数据的双向绑定，只能由子组件接收父组件"),e("code",[t._v("props")]),t._v("传过来的方法去改变父组件的数据，而不是直接将子组件的数据传递给父组件。")]),t._v(" "),e("h2",{attrs:{id:"更进一步"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#更进一步"}},[t._v("🌙")]),t._v(" 更进一步")]),t._v(" "),e("p",[t._v("如果项目非常大，上面方案都不合适，那你可能需要一个状态管理工具，通过状态管理工具把组件之间的关系，和关系的处理逻辑从组建中抽象出来，并集中化到统一的地方来处理，"),e("a",{attrs:{href:"https://redux.js.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redux"),e("OutboundLink")],1),t._v("就是一个非常不错的状态管理工具。")]),t._v(" "),e("p",[t._v("除了"),e("a",{attrs:{href:"https://redux.js.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redux"),e("OutboundLink")],1),t._v("，还有"),e("a",{attrs:{href:"https://cn.mobx.js.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mobx"),e("OutboundLink")],1),t._v("，Rematch，reselect等工具，这些都是用来解决不同问题的，只要根据自己的场景选择合适的工具就好了。")])])}),[],!1,null,null,null);e.default=r.exports}}]);