(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{781:function(t,s,a){"use strict";a.r(s);var e=a(2),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"glsl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#glsl"}},[t._v("🌙")]),t._v(" GLSL")]),t._v(" "),s("p",[t._v("GLSL全称是 "),s("code",[t._v("Graphics Library Shader Language")]),t._v(" （图形库着色器语言），是着色器使用的语言。 它有一些不同于JavaScript的特性，主要目的是为栅格化图形提供常用的计算功能。 GLSL语言结构类似于C语言，支持向量、矩阵、函数等基本数据类型和操作符，同时也支持控制结构、循环结构、条件结构等基本的程序结构。")]),t._v(" "),s("h2",{attrs:{id:"变量限定符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量限定符"}},[t._v("🌙")]),t._v(" 变量限定符")]),t._v(" "),s("p",[t._v("限定符赋给变量特殊的含义：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("const")]),t._v(": 用于声明非可写的编译时常量变量")]),t._v(" "),s("li",[s("code",[t._v("attribute")]),t._v("：用于经常更改的信息，只可以再顶点着色器中使用")]),t._v(" "),s("li",[s("code",[t._v("uniform")]),t._v("：用于不经常更改的信息，用于顶点着色器和片元着色器")]),t._v(" "),s("li",[s("code",[t._v("varying")]),t._v("：用于从"),s("code",[t._v("顶点着色器")]),t._v("传递到"),s("code",[t._v("片段着色器")]),t._v("的插值信息")])]),t._v(" "),s("h2",{attrs:{id:"变量声明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量声明"}},[t._v("🌙")]),t._v(" 变量声明")]),t._v(" "),s("p",[t._v("在GLSL中，变量需要先进行声明才能使用，声明方式与C语言相似，如下：")]),t._v(" "),s("div",{staticClass:"language-glsl line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-glsl"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明一个整型变量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明一个浮点型变量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明一个vec3类型的变量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("vec3")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("h2",{attrs:{id:"常量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常量"}},[t._v("🌙")]),t._v(" 常量")]),t._v(" "),s("p",[t._v('在GLSL中，可以使用关键字"const"来定义常量。常量的定义必须在函数外部进行，且在编译时就确定其值，不能在运行时修改。常量可以是标量、矢量、矩阵或其他数据类型。例如：')]),t._v(" "),s("div",{staticClass:"language-glsl line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-glsl"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" PI "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.14159")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("vec3")]),t._v(" GRAVITY "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("vec3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9.8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mat4")]),t._v(" IDENTITY_MATRIX "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mat4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("GLSL中有几种不同类型的常量，包括：")]),t._v(" "),s("ol",[s("li",[t._v("数值常量：表示数值的常量，可以是整数或浮点数。例如：\n"),s("ul",[s("li",[t._v("整数常量：10, -5, 1000")]),t._v(" "),s("li",[t._v("浮点数常量：3.14, -2.5, 1.0e-6")])])]),t._v(" "),s("li",[t._v("布尔常量：表示真或假的常量。只有两个可能的值：true和false。")]),t._v(" "),s("li",[t._v('字符串常量：由一系列字符组成的常量。在GLSL中，字符串常量需要用双引号括起来。例如："Hello, World!"')]),t._v(" "),s("li",[t._v("矢量常量：表示多个数值组成的常量。矢量常量可以是二维、三维或四维的。例如：\n"),s("ul",[s("li",[t._v("二维矢量常量：vec2(1.0, 2.0)")]),t._v(" "),s("li",[t._v("三维矢量常量：vec3(1.0, 2.0, 3.0)")]),t._v(" "),s("li",[t._v("四维矢量常量：vec4(1.0, 2.0, 3.0, 4.0)")])])]),t._v(" "),s("li",[t._v("矩阵常量：表示多个矢量组成的常量。矩阵常量可以是2x2、3x3或4x4的。例如：\n"),s("ul",[s("li",[t._v("2x2矩阵常量：mat2(1.0, 2.0, 3.0, 4.0)")]),t._v(" "),s("li",[t._v("3x3矩阵常量：mat3(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0)")]),t._v(" "),s("li",[t._v("4x4矩阵常量：mat4(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0)")])])])]),t._v(" "),s("p",[t._v("这些常量可以在GLSL程序中使用，并在执行期间保持不变。")]),t._v(" "),s("h2",{attrs:{id:"数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("🌙")]),t._v(" 数据类型")]),t._v(" "),s("p",[t._v("数据类型是编程语言中用于定义变量的属性和操作的分类。在GLSL中，常见的数据类型包括：")]),t._v(" "),s("ol",[s("li",[t._v("基本数据类型：\n"),s("ul",[s("li",[t._v("整数类型：int、uint。")]),t._v(" "),s("li",[t._v("浮点数类型：float、double。")]),t._v(" "),s("li",[t._v("布尔类型：bool。")])])]),t._v(" "),s("li",[t._v("向量类型：\n"),s("ul",[s("li",[t._v("2D 向量：vec2。")]),t._v(" "),s("li",[t._v("3D 向量：vec3。")]),t._v(" "),s("li",[t._v("4D 向量：vec4。")])])]),t._v(" "),s("li",[t._v("矩阵类型：\n"),s("ul",[s("li",[t._v("2x2 矩阵：mat2。")]),t._v(" "),s("li",[t._v("3x3 矩阵：mat3。")]),t._v(" "),s("li",[t._v("4x4 矩阵：mat4。")])])]),t._v(" "),s("li",[t._v("纹理类型：\n取样器--用于纹理采样：\n"),s("ul",[s("li",[t._v("sampler1D 访问一个一维纹理")]),t._v(" "),s("li",[t._v("sampler2D 访问一个二维纹理")]),t._v(" "),s("li",[t._v("sampler3D 访问一个三维纹理")]),t._v(" "),s("li",[t._v("samplerCube  访问一个立方体纹理")]),t._v(" "),s("li",[t._v("sampler1DShadow 访问一个带对比的一维深度纹理")]),t._v(" "),s("li",[t._v("sampler2DShadow 访问一个带对比的二维深度纹理")])])]),t._v(" "),s("li",[t._v("其他类型：\n"),s("ul",[s("li",[t._v("结构体类型：struct, 结构体可以包含任意基础类型、向量类型、矩阵类型、数组类型和其他结构体类型。")])]),t._v(" "),s("div",{staticClass:"language-glsl line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-glsl"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("dirlight")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("vec3")]),t._v(" direction"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("vec3")]),t._v(" color"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("ul",[s("li",[t._v("数组类型：数组大小可以是常量或动态, 包含任意基础类型、向量类型、矩阵类型。")]),t._v(" "),s("li",[t._v("空类型：void。\n这些数据类型具有不同的大小、精度和用途，可以根据需求选择适当的类型来存储和操作数据。")])])])]),t._v(" "),s("h2",{attrs:{id:"数据类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型转换"}},[t._v("🌙")]),t._v(" 数据类型转换")]),t._v(" "),s("p",[t._v("在GLSL中，数据类型的转换不支持隐士类型转换，需要显示地通过类型函数来转换：")]),t._v(" "),s("ul",[s("li",[t._v("浮点数到整数："),s("div",{staticClass:"language-glsl line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-glsl"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" f "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.14")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用int()函数显式将浮点数转换为整数")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])])]),t._v(" "),s("li",[t._v("整数到浮点数：")])]),t._v(" "),s("div",{staticClass:"language-glsl line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-glsl"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" f "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用float()函数显式将整数转换为浮点数")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("ul",[s("li",[t._v("整数到布尔值：")])]),t._v(" "),s("div",{staticClass:"language-glsl line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-glsl"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用bool()函数显式将整数转换为布尔值（非零值转换为true，0转换为false）")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("需要注意的是，某些转换可能会导致数据丢失或精度损失，因此需要确保转换后的值的行为和正确性。")]),t._v(" "),s("h2",{attrs:{id:"运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[t._v("🌙")]),t._v(" 运算符")]),t._v(" "),s("p",[t._v("运算符是用于执行特定操作的符号或符号组合。在GLSL中，常见的运算符包括：")]),t._v(" "),s("ol",[s("li",[t._v("算术运算符：\n"),s("ul",[s("li",[t._v("加法：+")]),t._v(" "),s("li",[t._v("减法：-")]),t._v(" "),s("li",[t._v("乘法：*")]),t._v(" "),s("li",[t._v("除法：/")]),t._v(" "),s("li",[t._v("取余：%")])])]),t._v(" "),s("li",[t._v("关系运算符：\n"),s("ul",[s("li",[t._v("相等：==")]),t._v(" "),s("li",[t._v("不等：!=")]),t._v(" "),s("li",[t._v("大于：>")]),t._v(" "),s("li",[t._v("小于：<")]),t._v(" "),s("li",[t._v("大于等于：>=")]),t._v(" "),s("li",[t._v("小于等于：<=")])])]),t._v(" "),s("li",[t._v("逻辑运算符：\n"),s("ul",[s("li",[t._v("逻辑与：&&")]),t._v(" "),s("li",[t._v("逻辑或：||")]),t._v(" "),s("li",[t._v("逻辑非：!")])])]),t._v(" "),s("li",[t._v("赋值运算符：\n"),s("ul",[s("li",[t._v("简单赋值：=")]),t._v(" "),s("li",[t._v("加法赋值：+=")]),t._v(" "),s("li",[t._v("减法赋值：-=")]),t._v(" "),s("li",[t._v("乘法赋值：*=")]),t._v(" "),s("li",[t._v("除法赋值：/=")]),t._v(" "),s("li",[t._v("取余赋值：%=")])])]),t._v(" "),s("li",[t._v("位运算符：\n"),s("ul",[s("li",[t._v("按位与：&")]),t._v(" "),s("li",[t._v("按位或：|")]),t._v(" "),s("li",[t._v("按位异或：^")]),t._v(" "),s("li",[t._v("左移：<<")]),t._v(" "),s("li",[t._v("右移：>>")])])])]),t._v(" "),s("p",[t._v("这些运算符可以用于执行各种数学、逻辑和位操作，以实现不同的计算和功能。")]),t._v(" "),s("h2",{attrs:{id:"控制流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#控制流"}},[t._v("🌙")]),t._v(" 控制流")]),t._v(" "),s("p",[t._v("GLSL的控制流  与C++非常类似，可以使用"),s("code",[t._v("for while")]),t._v("以及"),s("code",[t._v("do-while")]),t._v("实现循环，也可以使用"),s("code",[t._v("if")]),t._v("和"),s("code",[t._v("if-else")]),t._v("进行选择")]),t._v(" "),s("h2",{attrs:{id:"常用的内置变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用的内置变量"}},[t._v("🌙")]),t._v(" 常用的内置变量")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{attrs:{align:"center"}},[t._v("变量")]),s("th",{attrs:{align:"center"}},[t._v("output还是input")]),s("th",{attrs:{align:"center"}},[t._v("说明")])])]),s("tbody",[s("tr",[s("td",{attrs:{align:"center"}},[t._v("highp vec4 "),s("code",[t._v("gl_Position")])]),s("td",{attrs:{align:"center"}},[t._v("output")]),s("td",{attrs:{align:"center"}},[t._v("用在顶点着色器，顶点坐标信息")])]),s("tr",[s("td",{attrs:{align:"center"}},[t._v("mediump float "),s("code",[t._v("gl_PointSize")])]),s("td",{attrs:{align:"center"}},[t._v("output")]),s("td",{attrs:{align:"center"}},[t._v("用在顶点着色器，需要绘制点的大小,(只在gl.POINTS模式下有效)")])]),s("tr",[s("td",{attrs:{align:"center"}},[t._v("mediump vec4 "),s("code",[t._v("gl_FragCoord")]),t._v(";")]),s("td",{attrs:{align:"center"}},[t._v("input")]),s("td",{attrs:{align:"center"}},[t._v("用在片元着色器，当前点的位置")])]),s("tr",[s("td",{attrs:{align:"center"}},[t._v("bool "),s("code",[t._v("gl_FrontFacing")]),t._v(";")]),s("td",{attrs:{align:"center"}},[t._v("input")]),s("td",{attrs:{align:"center"}},[t._v("用在片元着色器，是否为正面片元")])]),s("tr",[s("td",{attrs:{align:"center"}},[t._v("mediump vec2 "),s("code",[t._v("gl_PointCoord")]),t._v(";")]),s("td",{attrs:{align:"center"}},[t._v("input")]),s("td",{attrs:{align:"center"}},[t._v("用在片元着色器，经过插值计算后的纹理坐标")])]),s("tr",[s("td",{attrs:{align:"center"}},[t._v("mediump vec4 "),s("code",[t._v("gl_FragColor")]),t._v(";")]),s("td",{attrs:{align:"center"}},[t._v("output")]),s("td",{attrs:{align:"center"}},[t._v("用在片元着色器，此像素点的颜色")])]),s("tr",[s("td",{attrs:{align:"center"}},[t._v("mediump vec4 "),s("code",[t._v("gl_FragData[n]")])]),s("td",{attrs:{align:"center"}},[t._v("output")]),s("td",{attrs:{align:"center"}},[t._v("用在片元着色器，当前片点的颜色，使用glDrawBuffers数据数组")])])])]),t._v(" "),s("h2",{attrs:{id:"常见的glsl内置变量和函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见的glsl内置变量和函数"}},[t._v("🌙")]),t._v(" 常见的GLSL内置变量和函数")]),t._v(" "),s("ul",[s("li",[t._v("sin(x): 正弦函数。")]),t._v(" "),s("li",[t._v("cos(x): 余弦函数。")]),t._v(" "),s("li",[t._v("tan(x): 正切函数。")]),t._v(" "),s("li",[t._v("asin(x): 反正弦函数。")]),t._v(" "),s("li",[t._v("acos(x): 反余弦函数。")]),t._v(" "),s("li",[t._v("atan(y, x): 反正切函数，返回角度。")]),t._v(" "),s("li",[t._v("pow(x, y): 计算幂。")]),t._v(" "),s("li",[t._v("sqrt(x): 计算平方根。")]),t._v(" "),s("li",[t._v("length(x): 返回向量的长度。")]),t._v(" "),s("li",[t._v("normalize(x): 返回长度为1的向量。")]),t._v(" "),s("li",[t._v("dot(x, y): 计算点积。")]),t._v(" "),s("li",[t._v("cross(x, y): 计算叉积。")])]),t._v(" "),s("blockquote",[s("p",[t._v("more: "),s("a",{attrs:{href:"https://supergithuber.github.io/openGL/GLSLFunction.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("GLSL 内建函数"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);